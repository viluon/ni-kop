{"pandoc-api-version":[1,22],"meta":{"author":{"t":"MetaInlines","c":[{"t":"Str","c":"Ondřej"},{"t":"Space"},{"t":"Str","c":"Kvapil"}]},"title":{"t":"MetaInlines","c":[{"t":"Str","c":"NI-KOP"},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"úkol"},{"t":"Space"},{"t":"Str","c":"1"}]}},"blocks":[{"t":"Header","c":[1,["kombinatorická-optimalizace-problém-batohu",[],[]],[{"t":"Str","c":"Kombinatorická"},{"t":"Space"},{"t":"Str","c":"optimalizace:"},{"t":"Space"},{"t":"Str","c":"problém"},{"t":"Space"},{"t":"Str","c":"batohu"}]]},{"t":"Header","c":[2,["zadání",[],[]],[{"t":"Str","c":"Zadání"}]]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Experimentálně"},{"t":"Space"},{"t":"Str","c":"vyhodnoťte"},{"t":"Space"},{"t":"Str","c":"závislost"},{"t":"Space"},{"t":"Str","c":"výpočetní"},{"t":"Space"},{"t":"Str","c":"složitosti"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"velikosti"},{"t":"Space"},{"t":"Str","c":"instance"},{"t":"SoftBreak"},{"t":"Str","c":"u"},{"t":"Space"},{"t":"Str","c":"následujících"},{"t":"Space"},{"t":"Str","c":"algoritmů"},{"t":"Space"},{"t":"Str","c":"rozhodovací"},{"t":"Space"},{"t":"Str","c":"verze"},{"t":"Space"},{"t":"Str","c":"0/1"},{"t":"Space"},{"t":"Str","c":"problému"},{"t":"Space"},{"t":"Str","c":"batohu:"}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"hrubá"},{"t":"Space"},{"t":"Str","c":"síla"}]}],[{"t":"Plain","c":[{"t":"Str","c":"metoda"},{"t":"Space"},{"t":"Str","c":"větví"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"hranic"},{"t":"Space"},{"t":"Str","c":"(B&B)"}]}]]}],[{"t":"Plain","c":[{"t":"Str","c":"Otázky,"},{"t":"Space"},{"t":"Str","c":"které"},{"t":"Space"},{"t":"Str","c":"má"},{"t":"Space"},{"t":"Str","c":"experiment"},{"t":"Space"},{"t":"Str","c":"zodpovědět:"}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Vyhovují"},{"t":"Space"},{"t":"Str","c":"nejhorší"},{"t":"Space"},{"t":"Str","c":"případy"},{"t":"Space"},{"t":"Str","c":"očekávané"},{"t":"Space"},{"t":"Str","c":"závislosti?"}]}],[{"t":"Plain","c":[{"t":"Str","c":"Závisí"},{"t":"Space"},{"t":"Str","c":"střední"},{"t":"Space"},{"t":"Str","c":"hodnota"},{"t":"Space"},{"t":"Str","c":"výpočetní"},{"t":"Space"},{"t":"Str","c":"závislosti"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"sadě"},{"t":"Space"},{"t":"Str","c":"instancí?"},{"t":"Space"},{"t":"Str","c":"Jestliže"},{"t":"Space"},{"t":"Str","c":"ano,"},{"t":"SoftBreak"},{"t":"Str","c":"proč?"}]}]]}]]},{"t":"Header","c":[3,["pokyny",[],[]],[{"t":"Str","c":"Pokyny"}]]},{"t":"Para","c":[{"t":"Str","c":"Oba"},{"t":"Space"},{"t":"Str","c":"algoritmy"},{"t":"Space"},{"t":"Str","c":"naprogramujte."},{"t":"Space"},{"t":"Str","c":"Výpočetní"},{"t":"Space"},{"t":"Str","c":"složitost"},{"t":"Space"},{"t":"Str","c":"(čas)"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"nejspolehlivější"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"SoftBreak"},{"t":"Str","c":"nejjednodušší"},{"t":"Space"},{"t":"Str","c":"měřit"},{"t":"Space"},{"t":"Str","c":"počtem"},{"t":"Space"},{"t":"Str","c":"navštívených"},{"t":"Space"},{"t":"Str","c":"konfigurací,"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"jest"},{"t":"Space"},{"t":"Str","c":"vyhodnocených"},{"t":"SoftBreak"},{"t":"Str","c":"sestav"},{"t":"Space"},{"t":"Str","c":"věcí"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"batohu."},{"t":"Space"},{"t":"Str","c":"Na"},{"t":"Space"},{"t":"Str","c":"obou"},{"t":"Space"},{"t":"Str","c":"sadách"},{"t":"Space"},{"t":"Str","c":"pozorujte"},{"t":"Space"},{"t":"Str","c":"závislost"},{"t":"Space"},{"t":"Str","c":"výpočetního"},{"t":"Space"},{"t":"Str","c":"času"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"SoftBreak"},{"t":"Math","c":[{"t":"InlineMath"},"n"]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"n"]},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"rozsahu,"},{"t":"Space"},{"t":"Str","c":"jaký"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"Vaše"},{"t":"Space"},{"t":"Str","c":"výpočetní"},{"t":"Space"},{"t":"Str","c":"platforma"},{"t":"Space"},{"t":"Str","c":"schopna"},{"t":"Space"},{"t":"Str","c":"zvládnout,"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"SoftBreak"},{"t":"Str","c":"jak"},{"t":"Space"},{"t":"Str","c":"maximální,"},{"t":"Space"},{"t":"Str","c":"tak"},{"t":"Space"},{"t":"Str","c":"průměrný"},{"t":"Space"},{"t":"Str","c":"čas."},{"t":"Space"},{"t":"Str","c":"Pro"},{"t":"Space"},{"t":"Str","c":"alespoň"},{"t":"Space"},{"t":"Str","c":"jednu"},{"t":"Space"},{"t":"Str","c":"hodnotu"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"n"]},{"t":"Space"},{"t":"Str","c":"(volte"},{"t":"Space"},{"t":"Str","c":"instance"},{"t":"SoftBreak"},{"t":"Str","c":"velikosti"},{"t":"Space"},{"t":"Str","c":"alespoň"},{"t":"Space"},{"t":"Str","c":"10)"},{"t":"Space"},{"t":"Str","c":"zjistěte"},{"t":"Space"},{"t":"Str","c":"četnosti"},{"t":"Space"},{"t":"Str","c":"jednotlivých"},{"t":"Space"},{"t":"Str","c":"hodnot"},{"t":"Space"},{"t":"Str","c":"(histogram)"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"SoftBreak"},{"t":"Str","c":"pokuste"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"jej"},{"t":"Space"},{"t":"Str","c":"vysvětlit."},{"t":"Space"},{"t":"Str","c":"Ohledně"},{"t":"Space"},{"t":"Str","c":"metody"},{"t":"Space"},{"t":"Str","c":"větví"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"hranic"},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"uvědomte"},{"t":"Space"},{"t":"Str","c":"si,"},{"t":"Space"},{"t":"Str","c":"že"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"SoftBreak"},{"t":"Str","c":"jedná"},{"t":"Space"},{"t":"Str","c":"o"},{"t":"Space"},{"t":"Str","c":"rozhodovací"},{"t":"Space"},{"t":"Str","c":"problém"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"toho"},{"t":"Space"},{"t":"Str","c":"ořezávejte."},{"t":"Space"},{"t":"Str","c":"Nápověda:"},{"t":"Space"},{"t":"Str","c":"i"},{"t":"Space"},{"t":"Str","c":"když"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"SoftBreak"},{"t":"Str","c":"rozhodovací"},{"t":"Space"},{"t":"Str","c":"problém,"},{"t":"Space"},{"t":"Str","c":"lze"},{"t":"Space"},{"t":"Str","c":"použít"},{"t":"Space"},{"t":"Str","c":"ořezávání"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"ceny."},{"t":"Space"},{"t":"Str","c":"Jak?"},{"t":"Space"},{"t":"Str","c":"Implementované"},{"t":"SoftBreak"},{"t":"Str","c":"způsoby"},{"t":"Space"},{"t":"Str","c":"ořezávání"},{"t":"Space"},{"t":"Str","c":"popište"},{"t":"Space"},{"t":"Str","c":"ve"},{"t":"Space"},{"t":"Str","c":"zprávě."}]},{"t":"Para","c":[{"t":"Str","c":"Sady"},{"t":"Space"},{"t":"Str","c":"NR"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"ZR"},{"t":"Space"},{"t":"Str","c":"vyhodnocujte"},{"t":"Space"},{"t":"Str","c":"zvlášť"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"proveďte"},{"t":"Space"},{"t":"Str","c":"jejich"},{"t":"Space"},{"t":"Str","c":"srovnání"},{"t":"Space"},{"t":"Str","c":"(stačí"},{"t":"Space"},{"t":"Str","c":"diskuze)."}]},{"t":"Header","c":[3,["bonusový-bod",[],[]],[{"t":"Str","c":"Bonusový"},{"t":"Space"},{"t":"Str","c":"bod"}]]},{"t":"Para","c":[{"t":"Str","c":"Na"},{"t":"Space"},{"t":"Str","c":"bonusový"},{"t":"Space"},{"t":"Str","c":"bod"},{"t":"Space"},{"t":"Str","c":"musí"},{"t":"Space"},{"t":"Str","c":"práce"},{"t":"Space"},{"t":"Str","c":"obsahovat"},{"t":"Space"},{"t":"Str","c":"přínos"},{"t":"Space"},{"t":"Str","c":"navíc."},{"t":"Space"},{"t":"Str","c":"Takové"},{"t":"Space"},{"t":"Str","c":"přínosy"},{"t":"Space"},{"t":"Str","c":"jsou"},{"t":"SoftBreak"},{"t":"Str","c":"například:"}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Zjištění,"},{"t":"Space"},{"t":"Str","c":"jak"},{"t":"Space"},{"t":"Str","c":"čas"},{"t":"Space"},{"t":"Str","c":"CPU"},{"t":"Space"},{"t":"Str","c":"souvisí"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"počtem"},{"t":"Space"},{"t":"Str","c":"vyhodnocených"},{"t":"Space"},{"t":"Str","c":"konfigurací"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"Vaší"},{"t":"SoftBreak"},{"t":"Str","c":"platformě"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"jak"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"tato"},{"t":"Space"},{"t":"Str","c":"závislost"},{"t":"Space"},{"t":"Str","c":"stabilní"},{"t":"Space"},{"t":"Str","c":"při"},{"t":"Space"},{"t":"Str","c":"opakovaném"},{"t":"Space"},{"t":"Str","c":"měření"},{"t":"Space"},{"t":"Str","c":"téže"},{"t":"SoftBreak"},{"t":"Str","c":"instance."}]}],[{"t":"Plain","c":[{"t":"Str","c":"Nový"},{"t":"Space"},{"t":"Str","c":"(a"},{"t":"Space"},{"t":"Str","c":"experimentálně"},{"t":"Space"},{"t":"Str","c":"porovnaný)"},{"t":"Space"},{"t":"Str","c":"způsob"},{"t":"Space"},{"t":"Str","c":"prořezávání"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"metodě"},{"t":"Space"},{"t":"Str","c":"větví"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"hranic."}]}],[{"t":"Plain","c":[{"t":"Str","c":"atd."}]}]]},{"t":"Header","c":[2,["řešení",[],[]],[{"t":"Str","c":"Řešení"}]]},{"t":"Para","c":[{"t":"Str","c":"První"},{"t":"Space"},{"t":"Str","c":"úkol"},{"t":"Space"},{"t":"Str","c":"předmětu"},{"t":"Space"},{"t":"Str","c":"NI-KOP"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"rozhodl"},{"t":"Space"},{"t":"Str","c":"implementovat"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"jazyce"},{"t":"Space"},{"t":"Str","c":"Rust"},{"t":"Space"},{"t":"Str","c":"za"},{"t":"Space"},{"t":"Str","c":"pomoci"},{"t":"SoftBreak"},{"t":"Str","c":"nástrojů"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"literate"},{"t":"Space"},{"t":"Str","c":"programming"}]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"přístup"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"psaní"},{"t":"Space"},{"t":"Str","c":"zdrojového"},{"t":"Space"},{"t":"Str","c":"kódu,"},{"t":"Space"},{"t":"Str","c":"který"},{"t":"SoftBreak"},{"t":"Str","c":"upřednostňuje"},{"t":"Space"},{"t":"Str","c":"lidsky"},{"t":"Space"},{"t":"Str","c":"čitelný"},{"t":"Space"},{"t":"Str","c":"popis"},{"t":"Space"},{"t":"Str","c":"před"},{"t":"Space"},{"t":"Str","c":"seznamem"},{"t":"Space"},{"t":"Str","c":"příkazů"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"počítač."},{"t":"Space"},{"t":"Str","c":"Tento"},{"t":"SoftBreak"},{"t":"Str","c":"soubor"},{"t":"Space"},{"t":"Str","c":"obsahuje"},{"t":"Space"},{"t":"Str","c":"veškerý"},{"t":"Space"},{"t":"Str","c":"zdrojový"},{"t":"Space"},{"t":"Str","c":"kód"},{"t":"Space"},{"t":"Str","c":"nutný"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"reprodukci"},{"t":"Space"},{"t":"Str","c":"mojí"},{"t":"Space"},{"t":"Str","c":"práce."}]},{"t":"Header","c":[2,["instrukce-k-sestavení-programu",[],[]],[{"t":"Str","c":"Instrukce"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"sestavení"},{"t":"Space"},{"t":"Str","c":"programu"}]]},{"t":"Para","c":[{"t":"Str","c":"Program"},{"t":"Space"},{"t":"Str","c":"využívá"},{"t":"Space"},{"t":"Str","c":"standardních"},{"t":"Space"},{"t":"Str","c":"nástrojů"},{"t":"Space"},{"t":"Str","c":"jazyka"},{"t":"Space"},{"t":"Str","c":"Rust."},{"t":"Space"},{"t":"Str","c":"O"},{"t":"Space"},{"t":"Str","c":"sestavení"},{"t":"Space"},{"t":"Str","c":"stačí"},{"t":"Space"},{"t":"Str","c":"požádat"},{"t":"SoftBreak"},{"t":"Code","c":[["",[],[]],"cargo"]},{"t":"Str","c":"."}]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["build-instructions",["zsh","eval","bootstrap-fold"],[]],"cd solver\ncargo build --release --color always"]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\"><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\"> Downloading</span> crates ...\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> anyhow v1.0.44\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> anyhow v1.0.44\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> solver v0.1.0 (/__w/ni-kop/ni-kop/1-exact-knapsack/solver)\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused variable: `b`</span>\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/main.rs:87:17\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">87</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>        let (m, b, items) = (self.m, self.b, &amp;self.items);\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">help: if this is intentional, prefix it with an underscore: `_b`</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">= </span><span style=\"font-weight: bold\">note</span>: `#[warn(unused_variables)]` on by default\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused variable: `b`</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/main.rs:113:27\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">113</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>        let Instance { m, b, items, .. } = self;\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                          <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">help: try ignoring the field: `b: _`</span>\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused variable: `b`</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/main.rs:145:17\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">145</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>        let (m, b, items) = (self.m, self.b, &amp;self.items);\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">help: if this is intentional, prefix it with an underscore: `_b`</span>\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">:</span> `solver` (bin \"solver\") generated 3 warnings\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">    Finished</span> release [optimized] target(s) in 3.62s\r\n</pre>"]}]]}]]}]]},{"t":"Header","c":[2,["benchmarking",[],[]],[{"t":"Str","c":"Benchmarking"}]]},{"t":"Para","c":[{"t":"Str","c":"Pro"},{"t":"Space"},{"t":"Str","c":"provedení"},{"t":"Space"},{"t":"Str","c":"měření"},{"t":"Space"},{"t":"Str","c":"výkonu"},{"t":"Space"},{"t":"Str","c":"programu"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"využil"},{"t":"Space"},{"t":"Str","c":"nástroje"},{"t":"Space"},{"t":"Str","c":"Hyperfine."}]},{"t":"Div","c":[["",["doctest"],[["status","ERROR"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["benchmark",["zsh","eval","bootstrap-fold"],[]],"uname -a\ncd solver\nhyperfine --export-json ../docs/bench.json \\\n          --parameter-list n 4,10,15,20,22,25,27,30,32 \\\n          --parameter-list alg bf,bb,dp \\\n          --min-runs 4 \\\n          --style color \\\n          'cargo run --release -- {alg} < ds/NR{n}_inst.dat' 2>&1 \\\n    | fold -w 120 -s"]}]]},{"t":"Div","c":[["",["doctestError"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\">Operation timed out.</pre>"]}]]}]]}]]},{"t":"Para","c":[{"t":"Str","c":"Měření"},{"t":"Space"},{"t":"Str","c":"ze"},{"t":"Space"},{"t":"Str","c":"spuštění"},{"t":"Space"},{"t":"Str","c":"Hyperfine"},{"t":"Space"},{"t":"Str","c":"jsou"},{"t":"Space"},{"t":"Str","c":"uložena"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"souboru"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"docs/bench.json"]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"který"},{"t":"SoftBreak"},{"t":"Str","c":"následně"},{"t":"Space"},{"t":"Str","c":"zpracujeme"},{"t":"Space"},{"t":"Str","c":"do"},{"t":"Space"},{"t":"Str","c":"tabulky"},{"t":"Space"},{"t":"Str","c":"níže."}]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["json-to-csv",["zsh","eval","bootstrap-fold"],[]],"echo \"algoritmus,\\$n\\$,průměr,\\$\\pm \\sigma\\$,minimum,medián,maximum\" > docs/bench.csv\njq -r \\\n   '.[] | .[] | [.parameters.alg, .parameters.n\n                , ([.mean, .stddev, .min, .median, .max]\n                   | map(\"**\" + (100000 * . + 0.5\n                         | floor\n                         | . / 100\n                         | tostring\n                         | if test(\"\\\\.\") then sub(\"\\\\.\"; \"**.\") else . + \"**\" end\n                         ) + \" ms\"\n                        )\n                  )\n                ] | flatten | @csv' \\\n   docs/bench.json \\\n>> docs/bench.csv\necho \"\""]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\">jq: error: Could not open file docs/bench.json: No such file or directory\r\n\r\n</pre>"]}]]}]]}]]},{"t":"Table","c":[["",[],[]],[null,[]],[[{"t":"AlignDefault"},{"t":"ColWidth","c":0.1744186046511628}],[{"t":"AlignDefault"},{"t":"ColWidth","c":9.302325581395349e-2}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.12790697674418605}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.19767441860465115}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.13953488372093023}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.12790697674418605}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.13953488372093023}]],[["",[],[]],[]],[[["",[],[]],0,[],[[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"algoritmus"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Math","c":[{"t":"InlineMath"},"n"]}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"průměr"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Math","c":[{"t":"InlineMath"},"\\pm \\sigma"]}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"minimum"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"medián"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"maximum"}]}]]]]]]],[["",[],[]],[]]]},{"t":"Para","c":[{"t":"Str","c":"+==============+=======+==========+================+===========+==========+===========+"},{"t":"SoftBreak"},{"t":"Str","c":"+————–+——-+———-+—————-+———–+———-+———–+"}]},{"t":"Header","c":[3,["srovnání-algoritmů",[],[]],[{"t":"Str","c":"Srovnání"},{"t":"Space"},{"t":"Str","c":"algoritmů"}]]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["",["python","eval"],[]],"import matplotlib.pyplot as plt\nimport pandas as pd\nfrom pandas.core.tools.numeric import to_numeric\n\ndf = pd.read_csv(\"docs/bench.csv\", dtype = \"string\")\ndf.rename({\n        \"algoritmus\": \"alg\",\n        \"$n$\": \"n\",\n        \"průměr\": \"avg\",\n        \"$\\pm \\sigma$\": \"sigma\",\n        \"medián\": \"median\",\n        \"minimum\": \"min\",\n        \"maximum\": \"max\",\n    },\n    inplace = True,\n    errors  = \"raise\",\n    axis    = 1,\n)\n\nnumeric_columns = [\"n\", \"avg\", \"sigma\", \"min\", \"median\", \"max\"]\ndf[numeric_columns] = df[numeric_columns].apply(lambda c:\n    c.apply(lambda x:\n        to_numeric(x.replace(\"**\", \"\").replace(\" ms\", \"\"))\n    )\n)\n\n# Create a figure and a set of subplots.\nfig, ax = plt.subplots(figsize = (11, 6))\nlabels = { \"bf\": \"Hrubá síla\"\n         , \"bb\": \"Branch & bound\"\n         , \"dp\": \"Dynamické programování\"\n         }\n\n# Group the dataframe by alg and create a line for each group.\nfor name, group in df.groupby(\"alg\"):\n    (x, y, sigma) = (group[\"n\"], group[\"avg\"], group[\"sigma\"])\n    ax.plot(x, y, label = labels[name])\n    ax.fill_between(x, y + sigma, y - sigma, alpha = 0.3)\n\n# Axis metadata: ticks, scaling, margins, and the legend\nplt.xticks(df[\"n\"])\nax.set_yscale(\"log\", base = 10)\nax.set_yticks(list(plt.yticks()[0]) + list(df[\"avg\"]), minor = True)\nax.margins(0.05, 0.1)\nax.legend(loc=\"upper left\")\n\nplt.savefig(\"docs/graph.svg\")"]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\">No handles with labels found to put in legend.\n&lt;Figure size 792x432 with 1 Axes&gt;</pre>"]}]]}]]}]]},{"t":"Para","c":[{"t":"Image","c":[["",[],[]],[{"t":"Str","c":"Závislost"},{"t":"Space"},{"t":"Str","c":"doby"},{"t":"Space"},{"t":"Str","c":"běhu"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"počtu"},{"t":"Space"},{"t":"Str","c":"předmětů."},{"t":"Space"},{"t":"Str","c":"Částečně"},{"t":"Space"},{"t":"Str","c":"průhledná"},{"t":"Space"},{"t":"Str","c":"oblast"},{"t":"Space"},{"t":"Str","c":"značí"},{"t":"SoftBreak"},{"t":"Str","c":"směrodatnou"},{"t":"Space"},{"t":"Str","c":"odchylku"},{"t":"Space"},{"t":"Str","c":"("},{"t":"Math","c":[{"t":"InlineMath"},"\\sigma"]},{"t":"Str","c":")."}],["graph.svg","fig:"]]}]},{"t":"Header","c":[2,["implementace",[],[]],[{"t":"Str","c":"Implementace"}]]},{"t":"Para","c":[{"t":"Str","c":"Program"},{"t":"Space"},{"t":"Str","c":"začíná"},{"t":"Space"},{"t":"Str","c":"definicí"},{"t":"Space"},{"t":"Str","c":"datové"},{"t":"Space"},{"t":"Str","c":"struktury"},{"t":"Space"},{"t":"Str","c":"reprezentující"},{"t":"Space"},{"t":"Str","c":"instanci"},{"t":"Space"},{"t":"Str","c":"problému"},{"t":"SoftBreak"},{"t":"Str","c":"batohu."}]},{"t":"CodeBlock","c":[["problem-instance-definition",["rust"],[]],"#[derive(Debug, PartialEq, Eq)]\nstruct Instance {\n    id: i32, m: u32, b: u32, items: Vec<(u32, u32)>\n}"]},{"t":"CodeBlock","c":[["",["rust"],[["file","solver/src/main.rs"]]],"use std::{io::stdin, str::FromStr};\nuse anyhow::{Context, Result, anyhow};\n\n<<problem-instance-definition>>\n\nfn main() -> Result<()> {\n    let alg = {\n        <<select-algorithm>>\n    }?;\n\n    loop {\n        match parse_line()? {\n            Some(inst) => println!(\"{}\", alg(&inst)),\n            None => return Ok(())\n        }\n    }\n}\n\n<<parser>>\n\nimpl Instance {\n    <<solver-dp>>\n\n    <<solver-bb>>\n\n    <<solver-bf>>\n}"]},{"t":"Header","c":[2,["algoritmy",[],[]],[{"t":"Str","c":"Algoritmy"}]]},{"t":"Header","c":[3,["hrubá-síla",[],[]],[{"t":"Str","c":"Hrubá"},{"t":"Space"},{"t":"Str","c":"síla"}]]},{"t":"CodeBlock","c":[["solver-bf",["rust"],[]],"fn brute_force(&self) -> u32 {\n    let (m, b, items) = (self.m, self.b, &self.items);\n    fn go(items: &Vec<(u32, u32)>, cap: u32, i: usize) -> u32 {\n        use std::cmp::max;\n        if i >= items.len() { return 0; }\n\n        let (w, c) = items[i];\n        let next = |cap| go(items, cap, i + 1);\n        let include = || next(cap - w);\n        let exclude = || next(cap);\n        let current = if w <= cap {\n            max(c + include(), exclude())\n        } else {\n            exclude()\n        };\n        current\n    }\n\n    go(items, m, 0)\n}"]},{"t":"Header","c":[3,["branch-bound",[],[]],[{"t":"Str","c":"Branch"},{"t":"Space"},{"t":"Str","c":"&"},{"t":"Space"},{"t":"Str","c":"bound"}]]},{"t":"CodeBlock","c":[["solver-bb",["rust"],[]],"fn branch_and_bound(&self) -> u32 {\n    let Instance { m, b, items, .. } = self;\n    let prices: Vec<u32> = items.iter().rev()\n        .scan(0, |sum, (_w, c)| {\n            *sum = *sum + c;\n            Some(*sum)\n        })\n        .collect::<Vec<_>>().into_iter().rev().collect();\n\n    struct State<'a>(&'a Vec<(u32, u32)>, Vec<u32>);\n    fn go(state: &State, best: u32, cap: u32, i: usize) -> u32 {\n        let State(items, prices) = state;\n        if i >= items.len() || best > prices[i] { return 0; }\n\n        let (w, c) = items[i];\n        let next = |best, cap| go(state, best, cap, i + 1);\n        let include = || next(best, cap - w);\n        let exclude = |best| next(best, cap);\n        if w <= cap {\n            use std::cmp::max;\n            let new_best = max(c + include(), best);\n            max(new_best, exclude(new_best))\n        } else {\n            exclude(best)\n        }\n    }\n\n    go(&State(items, prices), 0, *m, 0)\n}"]},{"t":"Header","c":[3,["dynamické-programování",[],[]],[{"t":"Str","c":"Dynamické"},{"t":"Space"},{"t":"Str","c":"programování"}]]},{"t":"CodeBlock","c":[["solver-dp",["rust"],[]],"fn dynamic_programming(&self) -> u32 {\n    let (m, b, items) = (self.m, self.b, &self.items);\n    let mut next = Vec::with_capacity(m as usize + 1);\n    next.resize(m as usize + 1, 0);\n    let mut last = Vec::new();\n\n    for i in 1..=items.len() {\n        let (weight, cost) = items[i - 1];\n        last.clone_from(&next);\n\n        for cap in 0..=m as usize {\n            next[cap] = if (cap as u32) < weight {\n                last[cap]\n            } else {\n                use std::cmp::max;\n                let rem_weight = max(0, cap as isize - weight as isize) as usize;\n                max(last[cap], last[rem_weight] + cost)\n            };\n        }\n    }\n\n    *next.last().unwrap() //>= b\n}"]},{"t":"Header","c":[2,["appendix",[],[]],[{"t":"Str","c":"Appendix"}]]},{"t":"Para","c":[{"t":"Str","c":"Zpracování"},{"t":"Space"},{"t":"Str","c":"vstupu"},{"t":"Space"},{"t":"Str","c":"zajišťuje"},{"t":"Space"},{"t":"Str","c":"jednoduchý"},{"t":"Space"},{"t":"Str","c":"parser"},{"t":"Space"},{"t":"Str","c":"pracující"},{"t":"Space"},{"t":"Str","c":"řádek"},{"t":"Space"},{"t":"Str","c":"po"},{"t":"Space"},{"t":"Str","c":"řádku."}]},{"t":"CodeBlock","c":[["parser",["rust","bootstrap-fold"],[]],"<<boilerplate>>\n\nfn parse_line() -> Result<Option<Instance>> {\n    let mut input = String::new();\n    match stdin().read_line(&mut input)? {\n        0 => return Ok(None),\n        _ => ()\n    };\n\n    let mut  numbers = input.split_whitespace();\n    let id = numbers.parse_next()?;\n    let  n = numbers.parse_next()?;\n    let  m = numbers.parse_next()?;\n    let  b = numbers.parse_next()?;\n\n    let mut items: Vec<(u32, u32)> = Vec::with_capacity(n);\n    for _ in 0..n {\n        let w = numbers.parse_next()?;\n        let c = numbers.parse_next()?;\n        items.push((w, c));\n    }\n\n    Ok(Some(Instance {id, m, b, items}))\n}"]},{"t":"Para","c":[{"t":"Str","c":"Výběr"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"řízen"},{"t":"Space"},{"t":"Str","c":"argumentem"},{"t":"Space"},{"t":"Str","c":"předaným"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"příkazové"},{"t":"Space"},{"t":"Str","c":"řádce."},{"t":"Space"},{"t":"Str","c":"Příslušnou"},{"t":"SoftBreak"},{"t":"Str","c":"funkci"},{"t":"Space"},{"t":"Str","c":"vrátíme"},{"t":"Space"},{"t":"Str","c":"jako"},{"t":"Space"},{"t":"Str","c":"hodnotu"},{"t":"Space"},{"t":"Str","c":"tohoto"},{"t":"Space"},{"t":"Str","c":"bloku:"}]},{"t":"CodeBlock","c":[["select-algorithm",["rust","bootstrap-fold"],[]],"let args: Vec<String> = std::env::args().collect();\nif args.len() == 2 {\n    let ok = |x: fn(&Instance) -> u32| Ok(x);\n    match &args[1][..] {\n        \"bf\"    => ok(Instance::brute_force),\n        \"bb\"    => ok(Instance::branch_and_bound),\n        \"dp\"    => ok(Instance::dynamic_programming),\n        invalid => Err(anyhow!(\"\\\"{}\\\" is not a known algorithm\", invalid)),\n    }\n} else {\n    println!(\n        \"Usage: {} <algorithm>, where <algorithm> is one of bf, bb, dp\",\n        args[0]\n    );\n    Err(anyhow!(\"Expected 1 argument, got {}\", args.len() - 1))\n}"]},{"t":"Para","c":[{"t":"Str","c":"Trait"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"Boilerplate"]},{"t":"Space"},{"t":"Str","c":"definuje"},{"t":"Space"},{"t":"Str","c":"funkci"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"parse_next"]},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"zkrácení"},{"t":"Space"},{"t":"Str","c":"zápisu"},{"t":"Space"},{"t":"Str","c":"zpracování"},{"t":"SoftBreak"},{"t":"Str","c":"vstupu."}]},{"t":"CodeBlock","c":[["boilerplate",["rust","bootstrap-fold"],[]],"trait Boilerplate {\n    fn parse_next<T: FromStr>(&mut self) -> Result<T>\n      where <T as FromStr>::Err: std::error::Error + Send + Sync + 'static;\n}\n\nimpl Boilerplate for std::str::SplitWhitespace<'_> {\n    fn parse_next<T: FromStr>(&mut self) -> Result<T>\n      where <T as FromStr>::Err: std::error::Error + Send + Sync + 'static {\n        let str = self.next().ok_or(anyhow!(\"unexpected end of input\"))?;\n        str.parse::<T>()\n           .with_context(|| format!(\"cannot parse {}\", str))\n    }\n}"]}]}