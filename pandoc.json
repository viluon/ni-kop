{"pandoc-api-version":[1,22,1],"meta":{"author":{"t":"MetaInlines","c":[{"t":"Str","c":"Ondřej"},{"t":"Space"},{"t":"Str","c":"Kvapil"}]},"title":{"t":"MetaInlines","c":[{"t":"Str","c":"NI-KOP"},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"úkol"},{"t":"Space"},{"t":"Str","c":"2"}]}},"blocks":[{"t":"Header","c":[1,["kombinatorická-optimalizace-problém-batohu",[],[]],[{"t":"Str","c":"Kombinatorická"},{"t":"Space"},{"t":"Str","c":"optimalizace:"},{"t":"Space"},{"t":"Str","c":"problém"},{"t":"Space"},{"t":"Str","c":"batohu"}]]},{"t":"Header","c":[2,["zadání",[],[]],[{"t":"Str","c":"Zadání"}]]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Na"},{"t":"Space"},{"t":"Str","c":"sadách"},{"t":"Space"},{"t":"Str","c":"instancí"},{"t":"Space"},{"t":"Str","c":"(NK,"},{"t":"Space"},{"t":"Str","c":"ZKC,"},{"t":"Space"},{"t":"Str","c":"ZKW)"},{"t":"Space"},{"t":"Str","c":"experimentálně"},{"t":"Space"},{"t":"Str","c":"vyhodnoťte"},{"t":"Space"},{"t":"Str","c":"závislost"},{"t":"SoftBreak"},{"t":"Str","c":"výpočetního"},{"t":"Space"},{"t":"Str","c":"času"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"u"},{"t":"Space"},{"t":"Str","c":"všech"},{"t":"Space"},{"t":"Str","c":"heuristických"},{"t":"Space"},{"t":"Str","c":"algoritmů"},{"t":"Space"},{"t":"Str","c":"také"},{"t":"Space"},{"t":"Str","c":"relativní"},{"t":"Space"},{"t":"Str","c":"chyby"},{"t":"SoftBreak"},{"t":"Str","c":"(průměrné"},{"t":"Space"},{"t":"Str","c":"i"},{"t":"Space"},{"t":"Str","c":"maximální)"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"velikosti"},{"t":"Space"},{"t":"Str","c":"instance"},{"t":"Space"},{"t":"Str","c":"následujících"},{"t":"Space"},{"t":"Str","c":"algoritmů"},{"t":"Space"},{"t":"Str","c":"pro"}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"konstruktivní"},{"t":"Space"},{"t":"Str","c":"verzi"},{"t":"Space"},{"t":"Str","c":"problému"},{"t":"Space"},{"t":"Str","c":"batohu:"}]}],[{"t":"Plain","c":[{"t":"Str","c":"Metoda"},{"t":"Space"},{"t":"Str","c":"větví"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"hranic."}]}],[{"t":"Plain","c":[{"t":"Str","c":"Metoda"},{"t":"Space"},{"t":"Str","c":"dynamického"},{"t":"Space"},{"t":"Str","c":"programování"},{"t":"Space"},{"t":"Str","c":"(dekompozice"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"kapacity"},{"t":"Space"},{"t":"Str","c":"nebo"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"cen),"}]}],[{"t":"Plain","c":[{"t":"Str","c":"Jednoduchá"},{"t":"Space"},{"t":"Str","c":"greedy"},{"t":"Space"},{"t":"Str","c":"heuristika"}]}],[{"t":"Plain","c":[{"t":"Str","c":"Modifikace"},{"t":"Space"},{"t":"Str","c":"této"},{"t":"Space"},{"t":"Str","c":"heuristiky"},{"t":"Space"},{"t":"Str","c":"(redux),"},{"t":"Space"},{"t":"Str","c":"která"},{"t":"Space"},{"t":"Str","c":"uvažuje"},{"t":"Space"},{"t":"Str","c":"také"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"sólo"},{"t":"SoftBreak"},{"t":"Str","c":"nejdražší"},{"t":"Space"},{"t":"Str","c":"věcí"}]}],[{"t":"Plain","c":[{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"algoritmem,"},{"t":"Space"},{"t":"Str","c":"tj."},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"použitím"},{"t":"Space"},{"t":"Str","c":"modifikovaného"},{"t":"Space"},{"t":"Str","c":"dynamického"},{"t":"Space"},{"t":"Str","c":"programování"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"SoftBreak"},{"t":"Str","c":"dekompozicí"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"ceny"},{"t":"Space"},{"t":"Str","c":"(při"},{"t":"Space"},{"t":"Str","c":"použití"},{"t":"Space"},{"t":"Str","c":"dekompozice"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"kapacity"},{"t":"Space"},{"t":"Str","c":"není"},{"t":"SoftBreak"},{"t":"Str","c":"algoritmus"},{"t":"Space"},{"t":"Str","c":"FPTAS)"}]}]]}],[{"t":"Plain","c":[{"t":"Str","c":"Experiment"},{"t":"Space"},{"t":"Str","c":"má"},{"t":"Space"},{"t":"Str","c":"odpovědět"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"tyto"},{"t":"Space"},{"t":"Str","c":"otázky:"}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Odpovídají"},{"t":"Space"},{"t":"Str","c":"obě"},{"t":"Space"},{"t":"Str","c":"závislosti"},{"t":"Space"},{"t":"Str","c":"(kvality"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"času)"},{"t":"Space"},{"t":"Str","c":"předpokladům?"}]}],[{"t":"Plain","c":[{"t":"Str","c":"Je"},{"t":"Space"},{"t":"Str","c":"některá"},{"t":"Space"},{"t":"Str","c":"heuristická"},{"t":"Space"},{"t":"Str","c":"metoda"},{"t":"Space"},{"t":"Str","c":"systematicky"},{"t":"Space"},{"t":"Str","c":"lepší"},{"t":"Space"},{"t":"Str","c":"(tzv."},{"t":"Space"},{"t":"Str","c":"dominance)"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"některém"},{"t":"SoftBreak"},{"t":"Str","c":"kritériu?"}]}],[{"t":"Plain","c":[{"t":"Str","c":"Jak"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"liší"},{"t":"Space"},{"t":"Str","c":"obtížnost"},{"t":"Space"},{"t":"Str","c":"jednotlivých"},{"t":"Space"},{"t":"Str","c":"sad"},{"t":"Space"},{"t":"Str","c":"z"},{"t":"Space"},{"t":"Str","c":"hlediska"},{"t":"Space"},{"t":"Str","c":"jednotlivých"},{"t":"Space"},{"t":"Str","c":"metod?"}]}],[{"t":"Plain","c":[{"t":"Str","c":"Jaká"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"závislost"},{"t":"Space"},{"t":"Str","c":"maximální"},{"t":"Space"},{"t":"Str","c":"chyby"},{"t":"Space"},{"t":"Str","c":"("},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon"]},{"t":"Str","c":")"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"času"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"SoftBreak"},{"t":"Str","c":"zvolené"},{"t":"Space"},{"t":"Str","c":"přesnosti?"},{"t":"Space"},{"t":"Str","c":"Odpovídá"},{"t":"Space"},{"t":"Str","c":"předpokladům?"}]}]]}]]},{"t":"Header","c":[3,["pokyny",[],[]],[{"t":"Str","c":"Pokyny"}]]},{"t":"Para","c":[{"t":"Str","c":"Algoritmy"},{"t":"Space"},{"t":"Str","c":"naprogramujte,"},{"t":"Space"},{"t":"Str","c":"využijte"},{"t":"Space"},{"t":"Str","c":"části"},{"t":"Space"},{"t":"Str","c":"programů"},{"t":"Space"},{"t":"Str","c":"z"},{"t":"Space"},{"t":"Str","c":"minulé"},{"t":"Space"},{"t":"Str","c":"úlohy."}]},{"t":"Para","c":[{"t":"Str","c":"Metodu"},{"t":"Space"},{"t":"Str","c":"větví"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"hranic"},{"t":"Space"},{"t":"Str","c":"použijte"},{"t":"Space"},{"t":"Str","c":"tak,"},{"t":"Space"},{"t":"Str","c":"aby"},{"t":"Space"},{"t":"Str","c":"omezujícím"},{"t":"Space"},{"t":"Str","c":"faktorem"},{"t":"Space"},{"t":"Str","c":"byla"},{"t":"Space"},{"t":"Str","c":"hodnota"},{"t":"SoftBreak"},{"t":"Str","c":"optimalizačního"},{"t":"Space"},{"t":"Str","c":"kritéria."},{"t":"Space"},{"t":"Str","c":"Tj."},{"t":"Space"},{"t":"Str","c":"použijte"},{"t":"Space"},{"t":"Str","c":"ořezávání"},{"t":"Space"},{"t":"Str","c":"shora"},{"t":"Space"},{"t":"Str","c":"(překročení"},{"t":"Space"},{"t":"Str","c":"kapacity"},{"t":"SoftBreak"},{"t":"Str","c":"batohu)"},{"t":"Space"},{"t":"Str","c":"i"},{"t":"Space"},{"t":"Str","c":"zdola"},{"t":"Space"},{"t":"Str","c":"(stávající"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"nemůže"},{"t":"Space"},{"t":"Str","c":"být"},{"t":"Space"},{"t":"Str","c":"lepší"},{"t":"Space"},{"t":"Str","c":"než"},{"t":"Space"},{"t":"Str","c":"nejlepší"},{"t":"Space"},{"t":"Str","c":"dosud"},{"t":"Space"},{"t":"Str","c":"nalezené)."}]},{"t":"Para","c":[{"t":"Str","c":"Pozor!"},{"t":"Space"},{"t":"Str","c":"Pokud"},{"t":"Space"},{"t":"Str","c":"implementujete"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"pomocí"},{"t":"Space"},{"t":"Str","c":"zanedbávání"},{"t":"Space"},{"t":"Str","c":"bitů,"},{"t":"Space"},{"t":"Str","c":"musíte"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"daný"},{"t":"Space"},{"t":"Str","c":"počet"},{"t":"SoftBreak"},{"t":"Str","c":"zanedbaných"},{"t":"Space"},{"t":"Str","c":"bitů"},{"t":"Space"},{"t":"Str","c":"vypočítat"},{"t":"Space"},{"t":"Str","c":"max."},{"t":"Space"},{"t":"Str","c":"chybu"},{"t":"Space"},{"t":"Str","c":"("},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon"]},{"t":"Str","c":")."},{"t":"Space"},{"t":"Str","c":"V"},{"t":"Space"},{"t":"Str","c":"experimentálních"},{"t":"SoftBreak"},{"t":"Str","c":"výsledcích"},{"t":"Space"},{"t":"Str","c":"by"},{"t":"Space"},{"t":"Str","c":"počet"},{"t":"Space"},{"t":"Str","c":"zanedbaných"},{"t":"Space"},{"t":"Str","c":"bitů"},{"t":"Space"},{"t":"Str","c":"neměl"},{"t":"Space"},{"t":"Str","c":"figurovat,"},{"t":"Space"},{"t":"Str","c":"neb"},{"t":"Space"},{"t":"Str","c":"neříká"},{"t":"Space"},{"t":"Str","c":"nic"},{"t":"Space"},{"t":"Str","c":"konkrétního"},{"t":"SoftBreak"},{"t":"Str","c":"o"},{"t":"Space"},{"t":"Str","c":"přesnosti."},{"t":"Space"},{"t":"Str","c":"Pozor,"},{"t":"Space"},{"t":"Str","c":"tato"},{"t":"Space"},{"t":"Str","c":"max."},{"t":"Space"},{"t":"Str","c":"chyba"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"jiná"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"každou"},{"t":"Space"},{"t":"Str","c":"instanci,"},{"t":"Space"},{"t":"Str","c":"nezávisí"},{"t":"Space"},{"t":"Str","c":"pouze"},{"t":"SoftBreak"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"velikosti"},{"t":"Space"},{"t":"Str","c":"instance,"},{"t":"Space"},{"t":"Str","c":"ale"},{"t":"Space"},{"t":"Str","c":"také"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"max."},{"t":"Space"},{"t":"Str","c":"ceně."}]},{"t":"Para","c":[{"t":"Str","c":"Pozor!"},{"t":"Space"},{"t":"Str","c":"V"},{"t":"Space"},{"t":"Str","c":"některých"},{"t":"Space"},{"t":"Str","c":"instancích"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"objevují"},{"t":"Space"},{"t":"Str","c":"věci,"},{"t":"Space"},{"t":"Str","c":"které"},{"t":"Space"},{"t":"Str","c":"svojí"},{"t":"Space"},{"t":"Str","c":"hmotností"},{"t":"Space"},{"t":"Str","c":"překračují"},{"t":"SoftBreak"},{"t":"Str","c":"kapacitu"},{"t":"Space"},{"t":"Str","c":"batohu."},{"t":"Space"},{"t":"Str","c":"Samozřejmě"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"jedná"},{"t":"Space"},{"t":"Str","c":"o"},{"t":"Space"},{"t":"Str","c":"platné"},{"t":"Space"},{"t":"Str","c":"instance."},{"t":"Space"},{"t":"Str","c":"Nicméně"},{"t":"Space"},{"t":"Str","c":"tyto"},{"t":"Space"},{"t":"Str","c":"věci"},{"t":"SoftBreak"},{"t":"Str","c":"komplikují"},{"t":"Space"},{"t":"Str","c":"přepočet"},{"t":"Space"},{"t":"Str","c":"cen"},{"t":"Space"},{"t":"Str","c":"u"},{"t":"Space"},{"t":"Str","c":"FPTAS."},{"t":"Space"},{"t":"Str","c":"Zvažte"},{"t":"Space"},{"t":"Str","c":"sami,"},{"t":"Space"},{"t":"Str","c":"jak"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"tím"},{"t":"Space"},{"t":"Str","c":"vypořádat."},{"t":"Space"},{"t":"Str","c":"Řešení"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"SoftBreak"},{"t":"Str","c":"snadné."}]},{"t":"Para","c":[{"t":"Str","c":"Pozn.:"},{"t":"Space"},{"t":"Str","c":"u"},{"t":"Space"},{"t":"Str","c":"této"},{"t":"Space"},{"t":"Str","c":"úlohy"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"opravdu"},{"t":"Space"},{"t":"Str","c":"lepší"},{"t":"Space"},{"t":"Str","c":"měřit"},{"t":"Space"},{"t":"Str","c":"skutečný"},{"t":"Space"},{"t":"Str","c":"CPU"},{"t":"Space"},{"t":"Str","c":"čas,"},{"t":"Space"},{"t":"Str","c":"namísto"},{"t":"Space"},{"t":"Str","c":"počtu"},{"t":"SoftBreak"},{"t":"Str","c":"konfigurací,"},{"t":"Space"},{"t":"Str","c":"jak"},{"t":"Space"},{"t":"Str","c":"tomu"},{"t":"Space"},{"t":"Str","c":"bylo"},{"t":"Space"},{"t":"Str","c":"u"},{"t":"Space"},{"t":"Str","c":"předchozího"},{"t":"Space"},{"t":"Str","c":"úkolu."},{"t":"Space"},{"t":"Str","c":"Srovnávají"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"zde"},{"t":"Space"},{"t":"Str","c":"principiálně"},{"t":"SoftBreak"},{"t":"Str","c":"velice"},{"t":"Space"},{"t":"Str","c":"odlišné"},{"t":"Space"},{"t":"Str","c":"algoritmy,"},{"t":"Space"},{"t":"Str","c":"najít"},{"t":"Space"},{"t":"Str","c":"jiný"},{"t":"Space"},{"t":"Str","c":"relevantní"},{"t":"Space"},{"t":"Str","c":"způsob"},{"t":"Space"},{"t":"Str","c":"měření"},{"t":"Space"},{"t":"Str","c":"složitosti"},{"t":"Space"},{"t":"Str","c":"by"},{"t":"Space"},{"t":"Str","c":"bylo"},{"t":"SoftBreak"},{"t":"Str","c":"obtížné"},{"t":"Space"},{"t":"Str","c":"(ne-li"},{"t":"Space"},{"t":"Str","c":"nemožné)."}]},{"t":"Header","c":[3,["zpráva-bude-obsahovat",[],[]],[{"t":"Str","c":"Zpráva"},{"t":"Space"},{"t":"Str","c":"bude"},{"t":"Space"},{"t":"Str","c":"obsahovat"}]]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"☒"},{"t":"Space"},{"t":"Str","c":"Popis"},{"t":"Space"},{"t":"Str","c":"implementovaných"},{"t":"Space"},{"t":"Str","c":"metod."}]}],[{"t":"Plain","c":[{"t":"Str","c":"☒"},{"t":"Space"},{"t":"Str","c":"Srovnání"},{"t":"Space"},{"t":"Str","c":"výpočetních"},{"t":"Space"},{"t":"Str","c":"časů"},{"t":"Space"},{"t":"Str","c":"metody"},{"t":"Space"},{"t":"Str","c":"větví"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"hranic,"},{"t":"Space"},{"t":"Str","c":"dynamického"},{"t":"Space"},{"t":"Str","c":"programování"},{"t":"SoftBreak"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"heuristiky"},{"t":"Space"},{"t":"Str","c":"cena/váha"},{"t":"Space"},{"t":"Str","c":"(stačí"},{"t":"Space"},{"t":"Str","c":"jedna)."},{"t":"Space"},{"t":"Str","c":"Grafy"},{"t":"Space"},{"t":"Str","c":"vítány."}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Tj."},{"t":"Space"},{"t":"Str","c":"závislosti"},{"t":"Space"},{"t":"Str","c":"výpočetních"},{"t":"Space"},{"t":"Str","c":"časů"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"velikosti"},{"t":"Space"},{"t":"Str","c":"instance"}]}]]}],[{"t":"Plain","c":[{"t":"Str","c":"☒"},{"t":"Space"},{"t":"Str","c":"Porovnání"},{"t":"Space"},{"t":"Str","c":"relativních"},{"t":"Space"},{"t":"Str","c":"chyb"},{"t":"Space"},{"t":"Str","c":"(průměrných"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"maximálních)"},{"t":"Space"},{"t":"Str","c":"obou"},{"t":"Space"},{"t":"Str","c":"heuristik."}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Tj."},{"t":"Space"},{"t":"Str","c":"závislosti"},{"t":"Space"},{"t":"Str","c":"rel."},{"t":"Space"},{"t":"Str","c":"chyby"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"velikosti"},{"t":"Space"},{"t":"Str","c":"instance"}]}]]}],[{"t":"Plain","c":[{"t":"Str","c":"☒"},{"t":"Space"},{"t":"Str","c":"U"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"pozorujte"},{"t":"Space"},{"t":"Str","c":"(naměřte,"},{"t":"Space"},{"t":"Str","c":"zdokumentujte)"},{"t":"Space"},{"t":"Str","c":"závislost"},{"t":"Space"},{"t":"Str","c":"chyby"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"SoftBreak"},{"t":"Str","c":"výpočetního"},{"t":"Space"},{"t":"Str","c":"času"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"zvolené"},{"t":"Space"},{"t":"Str","c":"přesnosti"},{"t":"Space"},{"t":"Str","c":"zobrazení"},{"t":"Space"},{"t":"Str","c":"(pro"},{"t":"Space"},{"t":"Str","c":"několik"},{"t":"Space"},{"t":"Str","c":"různých"},{"t":"SoftBreak"},{"t":"Str","c":"přesností),"},{"t":"Space"},{"t":"Str","c":"srovnání"},{"t":"Space"},{"t":"Str","c":"maximální"},{"t":"Space"},{"t":"Str","c":"naměřené"},{"t":"Space"},{"t":"Str","c":"chyby"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"teoreticky"},{"t":"Space"},{"t":"Str","c":"předpokládanou."}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Tj."},{"t":"Space"},{"t":"Str","c":"zvolte"},{"t":"Space"},{"t":"Str","c":"několik"},{"t":"Space"},{"t":"Str","c":"požadovaných"},{"t":"Space"},{"t":"Str","c":"přesností"},{"t":"Space"},{"t":"Str","c":"("},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon"]},{"t":"Str","c":"),"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"závislosti"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"SoftBreak"},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon"]},{"t":"Space"},{"t":"Str","c":"měřte"},{"t":"Space"},{"t":"Str","c":"čas"},{"t":"Space"},{"t":"Str","c":"běhu"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"reálnou"},{"t":"Space"},{"t":"Str","c":"(maximální,"},{"t":"Space"},{"t":"Str","c":"případně"},{"t":"Space"},{"t":"Str","c":"i"},{"t":"Space"},{"t":"Str","c":"průměrnou)"},{"t":"SoftBreak"},{"t":"Str","c":"chybu"},{"t":"Space"},{"t":"Str","c":"algoritmu"}]}]]}],[{"t":"Plain","c":[{"t":"Str","c":"☐"},{"t":"Space"},{"t":"Str","c":"Zhodnocení"},{"t":"Space"},{"t":"Str","c":"naměřených"},{"t":"Space"},{"t":"Str","c":"výsledků."}]}]]},{"t":"Header","c":[3,["bonusový-bod",[],[]],[{"t":"Str","c":"Bonusový"},{"t":"Space"},{"t":"Str","c":"bod"}]]},{"t":"Para","c":[{"t":"Str","c":"Na"},{"t":"Space"},{"t":"Str","c":"bonusový"},{"t":"Space"},{"t":"Str","c":"bod"},{"t":"Space"},{"t":"Str","c":"musí"},{"t":"Space"},{"t":"Str","c":"práce"},{"t":"Space"},{"t":"Str","c":"obsahovat"},{"t":"Space"},{"t":"Str","c":"přínos"},{"t":"Space"},{"t":"Str","c":"navíc."},{"t":"Space"},{"t":"Str","c":"Takové"},{"t":"Space"},{"t":"Str","c":"přínosy"},{"t":"Space"},{"t":"Str","c":"jsou"},{"t":"SoftBreak"},{"t":"Str","c":"například:"}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Str","c":"Srovnání"},{"t":"Space"},{"t":"Str","c":"různých"},{"t":"Space"},{"t":"Str","c":"dekompozic"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"dynamickém"},{"t":"Space"},{"t":"Str","c":"programování"},{"t":"Space"},{"t":"Str","c":"(podle"},{"t":"Space"},{"t":"Str","c":"váhy,"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"SoftBreak"},{"t":"Str","c":"kapacity)"}]}],[{"t":"Plain","c":[{"t":"Str","c":"detailní"},{"t":"Space"},{"t":"Str","c":"experimentální"},{"t":"Space"},{"t":"Str","c":"analýza"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"algoritmu,"}]}],[{"t":"Plain","c":[{"t":"Str","c":"atd."}]}]]},{"t":"Header","c":[2,["řešení",[],[]],[{"t":"Str","c":"Řešení"}]]},{"t":"Para","c":[{"t":"Str","c":"Úkoly"},{"t":"Space"},{"t":"Str","c":"předmětu"},{"t":"Space"},{"t":"Str","c":"NI-KOP"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"rozhodl"},{"t":"Space"},{"t":"Str","c":"implementovat"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"jazyce"},{"t":"Space"},{"t":"Str","c":"Rust"},{"t":"Space"},{"t":"Str","c":"za"},{"t":"Space"},{"t":"Str","c":"pomoci"},{"t":"SoftBreak"},{"t":"Str","c":"nástrojů"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"literate"},{"t":"Space"},{"t":"Str","c":"programming"}]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"přístup"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"psaní"},{"t":"Space"},{"t":"Str","c":"zdrojového"},{"t":"Space"},{"t":"Str","c":"kódu,"},{"t":"Space"},{"t":"Str","c":"který"},{"t":"SoftBreak"},{"t":"Str","c":"upřednostňuje"},{"t":"Space"},{"t":"Str","c":"lidsky"},{"t":"Space"},{"t":"Str","c":"čitelný"},{"t":"Space"},{"t":"Str","c":"popis"},{"t":"Space"},{"t":"Str","c":"před"},{"t":"Space"},{"t":"Str","c":"seznamem"},{"t":"Space"},{"t":"Str","c":"příkazů"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"počítač."},{"t":"Space"},{"t":"Str","c":"Tento"},{"t":"SoftBreak"},{"t":"Str","c":"dokument"},{"t":"Space"},{"t":"Str","c":"obsahuje"},{"t":"Space"},{"t":"Str","c":"veškerý"},{"t":"Space"},{"t":"Str","c":"zdrojový"},{"t":"Space"},{"t":"Str","c":"kód"},{"t":"Space"},{"t":"Str","c":"nutný"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"reprodukci"},{"t":"Space"},{"t":"Str","c":"mojí"},{"t":"Space"},{"t":"Str","c":"práce."},{"t":"Space"},{"t":"Str","c":"Výsledek"},{"t":"SoftBreak"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"dostupný"},{"t":"Space"},{"t":"Str","c":"online"},{"t":"Space"},{"t":"Str","c":"jako"},{"t":"Space"},{"t":"Str","c":"statická"},{"t":"Space"},{"t":"Link","c":[["",[],[]],[{"t":"Str","c":"webová"},{"t":"Space"},{"t":"Str","c":"stránka"}],["http://viluon.me/ni-kop/",""]]},{"t":"Space"},{"t":"Str","c":"a"},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Str","c":"ke"},{"t":"Space"},{"t":"Str","c":"stažení"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"PDF"}],["http://viluon.me/ni-kop/report.pdf",""]]},{"t":"Str","c":"."}]},{"t":"Header","c":[2,["instrukce-k-sestavení-programu",[],[]],[{"t":"Str","c":"Instrukce"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"sestavení"},{"t":"Space"},{"t":"Str","c":"programu"}]]},{"t":"Para","c":[{"t":"Str","c":"Program"},{"t":"Space"},{"t":"Str","c":"využívá"},{"t":"Space"},{"t":"Str","c":"standardních"},{"t":"Space"},{"t":"Str","c":"nástrojů"},{"t":"Space"},{"t":"Str","c":"jazyka"},{"t":"Space"},{"t":"Str","c":"Rust."},{"t":"Space"},{"t":"Str","c":"O"},{"t":"Space"},{"t":"Str","c":"sestavení"},{"t":"Space"},{"t":"Str","c":"stačí"},{"t":"Space"},{"t":"Str","c":"požádat"},{"t":"SoftBreak"},{"t":"Code","c":[["",[],[]],"cargo"]},{"t":"Str","c":"."}]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["build-instructions",["zsh","eval","bootstrap-fold"],[]],"cd solver\ncargo build --release --color always"]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\"><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">    Updating</span> crates.io index\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\"> Downloading</span> crates ...\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> log v0.4.14\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> funty v1.2.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> permutation v0.2.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> env_logger v0.8.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> radium v0.6.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> quickcheck_macros v1.0.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> tap v1.0.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> proc-macro2 v1.0.29\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> quickcheck v1.0.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> wyz v0.4.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> syn v1.0.80\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> bitvec v0.22.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> libc v0.2.103\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> aho-corasick v0.7.18\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> anyhow v1.0.44\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> memchr v2.4.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> libc v0.2.103\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> cfg-if v1.0.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> proc-macro2 v1.0.29\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> log v0.4.14\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> unicode-xid v0.2.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> syn v1.0.80\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> regex-syntax v0.6.25\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> radium v0.6.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> anyhow v1.0.44\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> tap v1.0.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> funty v1.2.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> permutation v0.2.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> wyz v0.4.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> aho-corasick v0.7.18\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> getrandom v0.2.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> quote v1.0.10\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> bitvec v0.22.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> rand_core v0.6.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> regex v1.5.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> rand v0.8.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> env_logger v0.8.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> quickcheck_macros v1.0.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> quickcheck v1.0.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> solver v0.1.0 (/__w/ni-kop/ni-kop/2-heuristic-knapsack/solver)\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused imports: `ReadDir`, `iter::Filter`</span>\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/lib.rs:6:5\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">6</span>  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>    iter::Filter,\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^^^^^^^^^^^^</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">...</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">10</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>    fs::{read_dir, File, ReadDir, DirEntry},\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                         <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^^^^^^^</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">= </span><span style=\"font-weight: bold\">note</span>: `#[warn(unused_imports)]` on by default\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">:</span> `solver` (lib) generated 1 warning\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">    Finished</span> release [optimized + debuginfo] target(s) in 42.34s\r\n</pre>"]}]]}]]}]]},{"t":"Header","c":[2,["benchmarking",[],[]],[{"t":"Str","c":"Benchmarking"}]]},{"t":"Para","c":[{"t":"Str","c":"Od"},{"t":"Space"},{"t":"Str","c":"minulého"},{"t":"Space"},{"t":"Str","c":"úkolu"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"kompletně"},{"t":"Space"},{"t":"Str","c":"přepsal"},{"t":"Space"},{"t":"Str","c":"funkcionalitu"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"benchmarking,"},{"t":"Space"},{"t":"Str","c":"která"},{"t":"SoftBreak"},{"t":"Str","c":"nově"},{"t":"Space"},{"t":"Str","c":"spoléhá"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"micro"},{"t":"Space"},{"t":"Str","c":"benchmark"},{"t":"Space"},{"t":"Str","c":"knihovnu"},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"Criterion.rs"]}],["https://crates.io/crates/criterion",""]]},{"t":"Str","c":"."},{"t":"Space"},{"t":"Str","c":"Díky"},{"t":"Space"},{"t":"Str","c":"ní"},{"t":"Space"},{"t":"Str","c":"stačí"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"měření"},{"t":"SoftBreak"},{"t":"Str","c":"výkonu"},{"t":"Space"},{"t":"Str","c":"spustit"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"cargo bench"]},{"t":"Str","c":"."},{"t":"Space"},{"t":"Str","c":"Konkrétní"},{"t":"Space"},{"t":"Str","c":"implementace"},{"t":"Space"},{"t":"Str","c":"měření"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"nahlédnutí"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Str","c":"dodatku"}],["#měření-výkonu",""]]},{"t":"Str","c":"."}]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["benchmark",["zsh","eval","bootstrap-fold"],[]],"uname -a\n./cpufetch --logo-short --color ibm\nmkdir -p docs/measurements/\ncd solver\ncargo bench --color always\ncp -r target/criterion ../docs/criterion"]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\">Linux 8b98970ee2e2 5.11.0-1020-azure #21~20.04.1-Ubuntu SMP Mon Oct 11 18:54:28 UTC 2021 x86_64 GNU/Linux\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">                   .#################.          </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">Name:</span>       <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">Intel Xeon E5-2673 v</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">              .####                   ####.     </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">Hypervisor:</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">Microsoft Hyper-V</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">          .##                             ###   </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">uArch:</span>      <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">Broadwell</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">       ##                          :##     ###  </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">Technology:</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">14nm</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">    #                ##            :##      ##  </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">Max Freq:</span>   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">Unknown</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">  ##   ##  ######.   ####  ######  :##      ##  </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">Cores:</span>      <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">2 cores</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\"> ##    ##  ##:  ##:  ##   ##   ### :##     ###  </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">AVX:</span>        <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">AVX,AVX2</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">##     ##  ##:  ##:  ##  :######## :##    ##    </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">FMA:</span>        <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">FMA3</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">##     ##  ##:  ##:  ##   ##.   .  :## ####     </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">L1i Size:</span>   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">32KB (64KB Total)</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">##      #  ##:  ##:  ####  #####:   ##          </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">L1d Size:</span>   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">32KB (64KB Total)</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\"> ##                                             </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">L2 Size:</span>    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">256KB (512KB Total)</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">  ###.                         ..o####.         </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">L3 Size:</span>    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">50MB</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">   ######oo...         ..oo#######              </span><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #585858\">Peak Perf.:</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">Unknown</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #8700d7\">          o###############o                     </span>\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\"> Downloading</span> crates ...\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> either v1.6.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> crossbeam-deque v0.8.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> cast v0.2.7\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> itertools v0.10.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> semver v1.0.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> half v1.8.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> crossbeam-utils v0.8.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> same-file v1.0.6\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> tinytemplate v1.2.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> plotters-backend v0.3.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> rayon-core v1.9.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> serde_json v1.0.69\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> criterion v0.3.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> walkdir v2.3.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> crossbeam-epoch v0.9.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> serde_cbor v0.11.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> rayon v1.5.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> oorandom v11.1.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> criterion-plot v0.4.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> num_cpus v1.13.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> plotters-svg v0.3.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> crossbeam-channel v0.5.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> scopeguard v1.1.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> rustc_version v0.4.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> memoffset v0.6.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> plotters v0.3.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> cfg-if v1.0.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> autocfg v1.0.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> libc v0.2.103\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> lazy_static v1.4.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> serde v1.0.130\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> crossbeam-utils v0.8.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> semver v1.0.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> crossbeam-epoch v0.9.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> ryu v1.0.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> regex-syntax v0.6.25\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> scopeguard v1.1.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> rayon-core v1.9.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> serde_json v1.0.69\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> tap v1.0.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> itoa v0.4.8\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> either v1.6.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> unicode-width v0.1.9\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> funty v1.2.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> plotters-backend v0.3.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> regex-automata v0.1.10\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> serde_derive v1.0.130\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> half v1.8.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> permutation v0.2.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> same-file v1.0.6\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> bitflags v1.3.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> oorandom v11.1.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> memoffset v0.6.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> num-traits v0.2.14\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> rayon v1.5.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> wyz v0.4.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> itertools v0.10.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> textwrap v0.11.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> plotters-svg v0.3.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> walkdir v2.3.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> memchr v2.4.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> log v0.4.14\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> radium v0.6.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> anyhow v1.0.44\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> clap v2.33.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> getrandom v0.2.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> num_cpus v1.13.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> atty v0.2.14\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> aho-corasick v0.7.18\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> csv-core v0.1.10\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> crossbeam-channel v0.5.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> rustc_version v0.4.0\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> bitvec v0.22.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> bstr v0.2.17\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> serde_cbor v0.11.2\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> rand_core v0.6.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> regex v1.5.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> plotters v0.3.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> cast v0.2.7\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> tinytemplate v1.2.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> csv v1.1.6\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> rand v0.8.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> env_logger v0.8.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> crossbeam-deque v0.8.1\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> quickcheck v1.0.3\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> solver v0.1.0 (/__w/ni-kop/ni-kop/2-heuristic-knapsack/solver)\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused imports: `ReadDir`, `iter::Filter`</span>\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/lib.rs:6:5\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">6</span>  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>    iter::Filter,\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^^^^^^^^^^^^</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">...</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">10</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>    fs::{read_dir, File, ReadDir, DirEntry},\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                         <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^^^^^^^</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">= </span><span style=\"font-weight: bold\">note</span>: `#[warn(unused_imports)]` on by default\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">:</span> `solver` (lib) generated 1 warning\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> criterion-plot v0.4.4\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> criterion v0.3.5\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused import: `anyhow`</span>\r\n <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>benches/bench.rs:6:22\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">6</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>use anyhow::{Result, anyhow};\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                     <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^^^^^^</span>\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">= </span><span style=\"font-weight: bold\">note</span>: `#[warn(unused_imports)]` on by default\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">:</span> `solver` (lib test) generated 1 warning (1 duplicate)\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">:</span> `solver` (bench \"bench\") generated 1 warning\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">    Finished</span> bench [optimized] target(s) in 2m 04s\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">     Running</span> unittests (target/release/deps/solver-b19ddf4ee3f29767)\r\n\r\nrunning 9 tests\r\ntest tests::bb_is_correct ... ignored\r\ntest tests::dpc_simple ... ignored\r\ntest tests::fptas_is_within_bounds ... ignored\r\ntest tests::proper ... ignored\r\ntest tests::qc_bb_is_really_correct ... ignored\r\ntest tests::qc_dp_matches_bb ... ignored\r\ntest tests::qc_dps_match ... ignored\r\ntest tests::small_bb_is_correct ... ignored\r\ntest tests::stupid ... ignored\r\n\r\ntest result: ok. 0 passed; 0 failed; 9 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">     Running</span> unittests (target/release/deps/main-2cc1d45e6f0585e7)\r\n\r\nrunning 0 tests\r\n\r\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">     Running</span> unittests (target/release/deps/bench-2649af515cbc405d)\r\nWARNING: HTML report generation will become a non-default optional feature in Criterion.rs 0.4.0.\r\nThis feature is being moved to cargo-criterion (https://github.com/bheisler/cargo-criterion) and will be optional in a future version of Criterion.rs. To silence this warning, either switch to cargo-criterion or enable the 'html_reports' feature in your Cargo.toml.\r\n\r\nGnuplot not found, using plotters backend\r\nBenchmarking bb/4\r                 \rBenchmarking bb/4: Warming up for 200.00 ms\r                                           \rBenchmarking bb/4: Collecting 10 samples in estimated 5.0008 s (202k iterations)\r                                                                                \rBenchmarking bb/4: Analyzing\r                            \r<span style=\"color: #00aa00\">bb/4</span>                    time:   [<span style=\"font-weight: lighter\">24.503 us</span> <span style=\"font-weight: bold\">24.742 us</span> <span style=\"font-weight: lighter\">24.955 us</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) high severe\r\nBenchmarking bb/10\r                  \rBenchmarking bb/10: Warming up for 200.00 ms\r                                            \rBenchmarking bb/10: Collecting 10 samples in estimated 5.0100 s (13k iterations)\r                                                                                \rBenchmarking bb/10: Analyzing\r                             \r<span style=\"color: #00aa00\">bb/10</span>                   time:   [<span style=\"font-weight: lighter\">330.39 us</span> <span style=\"font-weight: bold\">338.78 us</span> <span style=\"font-weight: lighter\">351.64 us</span>]\r\nBenchmarking bb/15\r                  \rBenchmarking bb/15: Warming up for 200.00 ms\r                                            \rBenchmarking bb/15: Collecting 10 samples in estimated 5.2782 s (880 iterations)\r                                                                                \rBenchmarking bb/15: Analyzing\r                             \r<span style=\"color: #00aa00\">bb/15</span>                   time:   [<span style=\"font-weight: lighter\">5.3553 ms</span> <span style=\"font-weight: bold\">5.4314 ms</span> <span style=\"font-weight: lighter\">5.5219 ms</span>]\r\nBenchmarking bb/20\r                  \rBenchmarking bb/20: Warming up for 200.00 ms\r\nWarning: Unable to complete 10 samples in 5.0s. You may wish to increase target time to 6.0s or enable flat sampling.\r\n\r                                            \rBenchmarking bb/20: Collecting 10 samples in estimated 5.9538 s (55 iterations)\r                                                                               \rBenchmarking bb/20: Analyzing\r                             \r<span style=\"color: #00aa00\">bb/20</span>                   time:   [<span style=\"font-weight: lighter\">106.94 ms</span> <span style=\"font-weight: bold\">108.29 ms</span> <span style=\"font-weight: lighter\">110.40 ms</span>]\r\nBenchmarking bb/22\r                  \rBenchmarking bb/22: Warming up for 200.00 ms\r                                            \rBenchmarking bb/22: Collecting 10 samples in estimated 6.9277 s (20 iterations)\r                                                                               \rBenchmarking bb/22: Analyzing\r                             \r<span style=\"color: #00aa00\">bb/22</span>                   time:   [<span style=\"font-weight: lighter\">352.74 ms</span> <span style=\"font-weight: bold\">359.22 ms</span> <span style=\"font-weight: lighter\">365.28 ms</span>]\r\nBenchmarking bb/25\r                  \rBenchmarking bb/25: Warming up for 200.00 ms\r\nWarning: Unable to complete 10 samples in 5.0s. You may wish to increase target time to 19.8s.\r\n\r                                            \rBenchmarking bb/25: Collecting 10 samples in estimated 19.829 s (10 iterations)\r                                                                               \rBenchmarking bb/25: Analyzing\r                             \r<span style=\"color: #00aa00\">bb/25</span>                   time:   [<span style=\"font-weight: lighter\">2.0026 s</span> <span style=\"font-weight: bold\">2.0187 s</span> <span style=\"font-weight: lighter\">2.0353 s</span>]\r\n\r\nBenchmarking dpc/4\r                  \rBenchmarking dpc/4: Warming up for 200.00 ms\r                                            \rBenchmarking dpc/4: Collecting 10 samples in estimated 5.6408 s (110 iterations)\r                                                                                \rBenchmarking dpc/4: Analyzing\r                             \r<span style=\"color: #00aa00\">dpc/4</span>                   time:   [<span style=\"font-weight: lighter\">53.515 ms</span> <span style=\"font-weight: bold\">54.838 ms</span> <span style=\"font-weight: lighter\">55.971 ms</span>]\r\nBenchmarking dpc/10\r                   \rBenchmarking dpc/10: Warming up for 200.00 ms\r                                             \rBenchmarking dpc/10: Collecting 10 samples in estimated 8.2209 s (20 iterations)\r                                                                                \rBenchmarking dpc/10: Analyzing\r                              \r<span style=\"color: #00aa00\">dpc/10</span>                  time:   [<span style=\"font-weight: lighter\">400.05 ms</span> <span style=\"font-weight: bold\">405.27 ms</span> <span style=\"font-weight: lighter\">410.62 ms</span>]\r\nBenchmarking dpc/15\r                   \rBenchmarking dpc/15: Warming up for 200.00 ms\r\nWarning: Unable to complete 10 samples in 5.0s. You may wish to increase target time to 9.7s.\r\n\r                                             \rBenchmarking dpc/15: Collecting 10 samples in estimated 9.7287 s (10 iterations)\r                                                                                \rBenchmarking dpc/15: Analyzing\r                              \r<span style=\"color: #00aa00\">dpc/15</span>                  time:   [<span style=\"font-weight: lighter\">965.78 ms</span> <span style=\"font-weight: bold\">974.91 ms</span> <span style=\"font-weight: lighter\">984.59 ms</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) high mild\r\nBenchmarking dpc/20\r                   \rBenchmarking dpc/20: Warming up for 200.00 ms\r\nWarning: Unable to complete 10 samples in 5.0s. You may wish to increase target time to 18.2s.\r\n\r                                             \rBenchmarking dpc/20: Collecting 10 samples in estimated 18.195 s (10 iterations)\r                                                                                \rBenchmarking dpc/20: Analyzing\r                              \r<span style=\"color: #00aa00\">dpc/20</span>                  time:   [<span style=\"font-weight: lighter\">1.8214 s</span> <span style=\"font-weight: bold\">1.8345 s</span> <span style=\"font-weight: lighter\">1.8495 s</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) high mild\r\n\r\nBenchmarking dpw/4\r                  \rBenchmarking dpw/4: Warming up for 200.00 ms\r                                            \rBenchmarking dpw/4: Collecting 10 samples in estimated 5.0551 s (4290 iterations)\r                                                                                 \rBenchmarking dpw/4: Analyzing\r                             \r<span style=\"color: #00aa00\">dpw/4</span>                   time:   [<span style=\"font-weight: lighter\">1.1119 ms</span> <span style=\"font-weight: bold\">1.1269 ms</span> <span style=\"font-weight: lighter\">1.1434 ms</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) high mild\r\nBenchmarking dpw/10\r                   \rBenchmarking dpw/10: Warming up for 200.00 ms\r                                             \rBenchmarking dpw/10: Collecting 10 samples in estimated 5.1869 s (605 iterations)\r                                                                                 \rBenchmarking dpw/10: Analyzing\r                              \r<span style=\"color: #00aa00\">dpw/10</span>                  time:   [<span style=\"font-weight: lighter\">8.5222 ms</span> <span style=\"font-weight: bold\">8.7864 ms</span> <span style=\"font-weight: lighter\">9.0392 ms</span>]\r\nBenchmarking dpw/15\r                   \rBenchmarking dpw/15: Warming up for 200.00 ms\r                                             \rBenchmarking dpw/15: Collecting 10 samples in estimated 5.6334 s (275 iterations)\r                                                                                 \rBenchmarking dpw/15: Analyzing\r                              \r<span style=\"color: #00aa00\">dpw/15</span>                  time:   [<span style=\"font-weight: lighter\">20.118 ms</span> <span style=\"font-weight: bold\">20.352 ms</span> <span style=\"font-weight: lighter\">20.810 ms</span>]\r\nBenchmarking dpw/20\r                   \rBenchmarking dpw/20: Warming up for 200.00 ms\r                                             \rBenchmarking dpw/20: Collecting 10 samples in estimated 5.2163 s (110 iterations)\r                                                                                 \rBenchmarking dpw/20: Analyzing\r                              \r<span style=\"color: #00aa00\">dpw/20</span>                  time:   [<span style=\"font-weight: lighter\">41.457 ms</span> <span style=\"font-weight: bold\">42.106 ms</span> <span style=\"font-weight: lighter\">43.140 ms</span>]\r\nBenchmarking dpw/22\r                   \rBenchmarking dpw/22: Warming up for 200.00 ms\r                                             \rBenchmarking dpw/22: Collecting 10 samples in estimated 5.0484 s (110 iterations)\r                                                                                 \rBenchmarking dpw/22: Analyzing\r                              \r<span style=\"color: #00aa00\">dpw/22</span>                  time:   [<span style=\"font-weight: lighter\">46.540 ms</span> <span style=\"font-weight: bold\">47.170 ms</span> <span style=\"font-weight: lighter\">47.642 ms</span>]\r\nBenchmarking dpw/25\r                   \rBenchmarking dpw/25: Warming up for 200.00 ms\r                                             \rBenchmarking dpw/25: Collecting 10 samples in estimated 6.8469 s (110 iterations)\r                                                                                 \rBenchmarking dpw/25: Analyzing\r                              \r<span style=\"color: #00aa00\">dpw/25</span>                  time:   [<span style=\"font-weight: lighter\">61.878 ms</span> <span style=\"font-weight: bold\">63.037 ms</span> <span style=\"font-weight: lighter\">64.011 ms</span>]\r\nBenchmarking dpw/27\r                   \rBenchmarking dpw/27: Warming up for 200.00 ms\r                                             \rBenchmarking dpw/27: Collecting 10 samples in estimated 7.0202 s (110 iterations)\r                                                                                 \rBenchmarking dpw/27: Analyzing\r                              \r<span style=\"color: #00aa00\">dpw/27</span>                  time:   [<span style=\"font-weight: lighter\">63.066 ms</span> <span style=\"font-weight: bold\">64.234 ms</span> <span style=\"font-weight: lighter\">65.280 ms</span>]\r\nBenchmarking dpw/30\r                   \rBenchmarking dpw/30: Warming up for 200.00 ms\r                                             \rBenchmarking dpw/30: Collecting 10 samples in estimated 8.6440 s (110 iterations)\r                                                                                 \rBenchmarking dpw/30: Analyzing\r                              \r<span style=\"color: #00aa00\">dpw/30</span>                  time:   [<span style=\"font-weight: lighter\">81.542 ms</span> <span style=\"font-weight: bold\">83.278 ms</span> <span style=\"font-weight: lighter\">84.490 ms</span>]\r\n\r\nBenchmarking fptas1/4\r                     \rBenchmarking fptas1/4: Warming up for 200.00 ms\r                                               \rBenchmarking fptas1/4: Collecting 10 samples in estimated 5.0404 s (5665 iterations)\r                                                                                    \rBenchmarking fptas1/4: Analyzing\r                                \r<span style=\"color: #00aa00\">fptas1/4</span>                time:   [<span style=\"font-weight: lighter\">876.74 us</span> <span style=\"font-weight: bold\">894.12 us</span> <span style=\"font-weight: lighter\">911.10 us</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) high mild\r\nBenchmarking fptas1/10\r                      \rBenchmarking fptas1/10: Warming up for 200.00 ms\r                                                \rBenchmarking fptas1/10: Collecting 10 samples in estimated 5.7636 s (330 iterations)\r                                                                                    \rBenchmarking fptas1/10: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas1/10</span>               time:   [<span style=\"font-weight: lighter\">17.360 ms</span> <span style=\"font-weight: bold\">17.730 ms</span> <span style=\"font-weight: lighter\">18.100 ms</span>]\r\nBenchmarking fptas1/15\r                      \rBenchmarking fptas1/15: Warming up for 200.00 ms\r                                                \rBenchmarking fptas1/15: Collecting 10 samples in estimated 6.8664 s (110 iterations)\r                                                                                    \rBenchmarking fptas1/15: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas1/15</span>               time:   [<span style=\"font-weight: lighter\">59.152 ms</span> <span style=\"font-weight: bold\">60.522 ms</span> <span style=\"font-weight: lighter\">61.519 ms</span>]\r\nBenchmarking fptas1/20\r                      \rBenchmarking fptas1/20: Warming up for 200.00 ms\r\nWarning: Unable to complete 10 samples in 5.0s. You may wish to increase target time to 8.5s or enable flat sampling.\r\n\r                                                \rBenchmarking fptas1/20: Collecting 10 samples in estimated 8.4899 s (55 iterations)\r                                                                                   \rBenchmarking fptas1/20: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas1/20</span>               time:   [<span style=\"font-weight: lighter\">149.44 ms</span> <span style=\"font-weight: bold\">151.70 ms</span> <span style=\"font-weight: lighter\">153.15 ms</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) low mild\r\nBenchmarking fptas1/22\r                      \rBenchmarking fptas1/22: Warming up for 200.00 ms\r                                                \rBenchmarking fptas1/22: Collecting 10 samples in estimated 5.9261 s (30 iterations)\r                                                                                   \rBenchmarking fptas1/22: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas1/22</span>               time:   [<span style=\"font-weight: lighter\">188.32 ms</span> <span style=\"font-weight: bold\">191.17 ms</span> <span style=\"font-weight: lighter\">194.08 ms</span>]\r\nBenchmarking fptas1/25\r                      \rBenchmarking fptas1/25: Warming up for 200.00 ms\r                                                \rBenchmarking fptas1/25: Collecting 10 samples in estimated 5.4205 s (20 iterations)\r                                                                                   \rBenchmarking fptas1/25: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas1/25</span>               time:   [<span style=\"font-weight: lighter\">280.35 ms</span> <span style=\"font-weight: bold\">284.07 ms</span> <span style=\"font-weight: lighter\">287.62 ms</span>]\r\nBenchmarking fptas1/27\r                      \rBenchmarking fptas1/27: Warming up for 200.00 ms\r                                                \rBenchmarking fptas1/27: Collecting 10 samples in estimated 7.9111 s (20 iterations)\r                                                                                   \rBenchmarking fptas1/27: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas1/27</span>               time:   [<span style=\"font-weight: lighter\">372.72 ms</span> <span style=\"font-weight: bold\">378.57 ms</span> <span style=\"font-weight: lighter\">384.96 ms</span>]\r\n\r\nBenchmarking fptas2/4\r                     \rBenchmarking fptas2/4: Warming up for 200.00 ms\r                                               \rBenchmarking fptas2/4: Collecting 10 samples in estimated 5.5047 s (550 iterations)\r                                                                                   \rBenchmarking fptas2/4: Analyzing\r                                \r<span style=\"color: #00aa00\">fptas2/4</span>                time:   [<span style=\"font-weight: lighter\">10.190 ms</span> <span style=\"font-weight: bold\">10.283 ms</span> <span style=\"font-weight: lighter\">10.376 ms</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) high mild\r\nBenchmarking fptas2/10\r                      \rBenchmarking fptas2/10: Warming up for 200.00 ms\r                                                \rBenchmarking fptas2/10: Collecting 10 samples in estimated 5.7797 s (30 iterations)\r                                                                                   \rBenchmarking fptas2/10: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas2/10</span>               time:   [<span style=\"font-weight: lighter\">176.33 ms</span> <span style=\"font-weight: bold\">179.46 ms</span> <span style=\"font-weight: lighter\">183.06 ms</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) high mild\r\nBenchmarking fptas2/15\r                      \rBenchmarking fptas2/15: Warming up for 200.00 ms\r\nWarning: Unable to complete 10 samples in 5.0s. You may wish to increase target time to 6.5s.\r\n\r                                                \rBenchmarking fptas2/15: Collecting 10 samples in estimated 6.4840 s (10 iterations)\r                                                                                   \rBenchmarking fptas2/15: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas2/15</span>               time:   [<span style=\"font-weight: lighter\">609.51 ms</span> <span style=\"font-weight: bold\">618.75 ms</span> <span style=\"font-weight: lighter\">628.21 ms</span>]\r\nBenchmarking fptas2/20\r                      \rBenchmarking fptas2/20: Warming up for 200.00 ms\r\nWarning: Unable to complete 10 samples in 5.0s. You may wish to increase target time to 15.0s.\r\n\r                                                \rBenchmarking fptas2/20: Collecting 10 samples in estimated 15.048 s (10 iterations)\r                                                                                   \rBenchmarking fptas2/20: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas2/20</span>               time:   [<span style=\"font-weight: lighter\">1.4989 s</span> <span style=\"font-weight: bold\">1.5252 s</span> <span style=\"font-weight: lighter\">1.5547 s</span>]\r\nBenchmarking fptas2/22\r                      \rBenchmarking fptas2/22: Warming up for 200.00 ms\r\nWarning: Unable to complete 10 samples in 5.0s. You may wish to increase target time to 19.6s.\r\n\r                                                \rBenchmarking fptas2/22: Collecting 10 samples in estimated 19.586 s (10 iterations)\r                                                                                   \rBenchmarking fptas2/22: Analyzing\r                                 \r<span style=\"color: #00aa00\">fptas2/22</span>               time:   [<span style=\"font-weight: lighter\">1.9774 s</span> <span style=\"font-weight: bold\">1.9985 s</span> <span style=\"font-weight: lighter\">2.0195 s</span>]\r\n\r\nBenchmarking greedy/4\r                     \rBenchmarking greedy/4: Warming up for 200.00 ms\r                                               \rBenchmarking greedy/4: Collecting 10 samples in estimated 5.0001 s (388k iterations)\r                                                                                    \rBenchmarking greedy/4: Analyzing\r                                \r<span style=\"color: #00aa00\">greedy/4</span>                time:   [<span style=\"font-weight: lighter\">12.938 us</span> <span style=\"font-weight: bold\">13.142 us</span> <span style=\"font-weight: lighter\">13.300 us</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) low mild\r\nBenchmarking greedy/10\r                      \rBenchmarking greedy/10: Warming up for 200.00 ms\r                                                \rBenchmarking greedy/10: Collecting 10 samples in estimated 5.0004 s (169k iterations)\r                                                                                     \rBenchmarking greedy/10: Analyzing\r                                 \r<span style=\"color: #00aa00\">greedy/10</span>               time:   [<span style=\"font-weight: lighter\">27.521 us</span> <span style=\"font-weight: bold\">28.023 us</span> <span style=\"font-weight: lighter\">28.769 us</span>]\r\nBenchmarking greedy/15\r                      \rBenchmarking greedy/15: Warming up for 200.00 ms\r                                                \rBenchmarking greedy/15: Collecting 10 samples in estimated 5.0003 s (89k iterations)\r                                                                                    \rBenchmarking greedy/15: Analyzing\r                                 \r<span style=\"color: #00aa00\">greedy/15</span>               time:   [<span style=\"font-weight: lighter\">51.021 us</span> <span style=\"font-weight: bold\">52.126 us</span> <span style=\"font-weight: lighter\">53.237 us</span>]\r\nBenchmarking greedy/20\r                      \rBenchmarking greedy/20: Warming up for 200.00 ms\r                                                \rBenchmarking greedy/20: Collecting 10 samples in estimated 5.0026 s (62k iterations)\r                                                                                    \rBenchmarking greedy/20: Analyzing\r                                 \r<span style=\"color: #00aa00\">greedy/20</span>               time:   [<span style=\"font-weight: lighter\">83.589 us</span> <span style=\"font-weight: bold\">84.748 us</span> <span style=\"font-weight: lighter\">85.791 us</span>]\r\nBenchmarking greedy/22\r                      \rBenchmarking greedy/22: Warming up for 200.00 ms\r                                                \rBenchmarking greedy/22: Collecting 10 samples in estimated 5.0020 s (40k iterations)\r                                                                                    \rBenchmarking greedy/22: Analyzing\r                                 \r<span style=\"color: #00aa00\">greedy/22</span>               time:   [<span style=\"font-weight: lighter\">126.34 us</span> <span style=\"font-weight: bold\">128.61 us</span> <span style=\"font-weight: lighter\">130.76 us</span>]\r\nBenchmarking greedy/25\r                      \rBenchmarking greedy/25: Warming up for 200.00 ms\r                                                \rBenchmarking greedy/25: Collecting 10 samples in estimated 5.0012 s (34k iterations)\r                                                                                    \rBenchmarking greedy/25: Analyzing\r                                 \r<span style=\"color: #00aa00\">greedy/25</span>               time:   [<span style=\"font-weight: lighter\">152.36 us</span> <span style=\"font-weight: bold\">154.69 us</span> <span style=\"font-weight: lighter\">156.98 us</span>]\r\nBenchmarking greedy/27\r                      \rBenchmarking greedy/27: Warming up for 200.00 ms\r                                                \rBenchmarking greedy/27: Collecting 10 samples in estimated 5.0066 s (30k iterations)\r                                                                                    \rBenchmarking greedy/27: Analyzing\r                                 \r<span style=\"color: #00aa00\">greedy/27</span>               time:   [<span style=\"font-weight: lighter\">164.03 us</span> <span style=\"font-weight: bold\">166.30 us</span> <span style=\"font-weight: lighter\">169.09 us</span>]\r\n<span style=\"color: #aa5500\">Found 2 outliers among 10 measurements (20.00%)</span>\r\n  1 (10.00%) low mild\r\n  1 (10.00%) high mild\r\nBenchmarking greedy/30\r                      \rBenchmarking greedy/30: Warming up for 200.00 ms\r                                                \rBenchmarking greedy/30: Collecting 10 samples in estimated 5.0034 s (27k iterations)\r                                                                                    \rBenchmarking greedy/30: Analyzing\r                                 \r<span style=\"color: #00aa00\">greedy/30</span>               time:   [<span style=\"font-weight: lighter\">180.95 us</span> <span style=\"font-weight: bold\">185.10 us</span> <span style=\"font-weight: lighter\">189.03 us</span>]\r\nBenchmarking greedy/32\r                      \rBenchmarking greedy/32: Warming up for 200.00 ms\r                                                \rBenchmarking greedy/32: Collecting 10 samples in estimated 5.0084 s (25k iterations)\r                                                                                    \rBenchmarking greedy/32: Analyzing\r                                 \r<span style=\"color: #00aa00\">greedy/32</span>               time:   [<span style=\"font-weight: lighter\">208.79 us</span> <span style=\"font-weight: bold\">212.29 us</span> <span style=\"font-weight: lighter\">215.67 us</span>]\r\n\r\nBenchmarking redux/4\r                    \rBenchmarking redux/4: Warming up for 200.00 ms\r                                              \rBenchmarking redux/4: Collecting 10 samples in estimated 5.0004 s (333k iterations)\r                                                                                   \rBenchmarking redux/4: Analyzing\r                               \r<span style=\"color: #00aa00\">redux/4</span>                 time:   [<span style=\"font-weight: lighter\">14.204 us</span> <span style=\"font-weight: bold\">14.426 us</span> <span style=\"font-weight: lighter\">14.677 us</span>]\r\nBenchmarking redux/10\r                     \rBenchmarking redux/10: Warming up for 200.00 ms\r                                               \rBenchmarking redux/10: Collecting 10 samples in estimated 5.0013 s (153k iterations)\r                                                                                    \rBenchmarking redux/10: Analyzing\r                                \r<span style=\"color: #00aa00\">redux/10</span>                time:   [<span style=\"font-weight: lighter\">31.542 us</span> <span style=\"font-weight: bold\">31.960 us</span> <span style=\"font-weight: lighter\">32.473 us</span>]\r\nBenchmarking redux/15\r                     \rBenchmarking redux/15: Warming up for 200.00 ms\r                                               \rBenchmarking redux/15: Collecting 10 samples in estimated 5.0027 s (82k iterations)\r                                                                                   \rBenchmarking redux/15: Analyzing\r                                \r<span style=\"color: #00aa00\">redux/15</span>                time:   [<span style=\"font-weight: lighter\">58.888 us</span> <span style=\"font-weight: bold\">59.390 us</span> <span style=\"font-weight: lighter\">60.082 us</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) high mild\r\nBenchmarking redux/20\r                     \rBenchmarking redux/20: Warming up for 200.00 ms\r                                               \rBenchmarking redux/20: Collecting 10 samples in estimated 5.0053 s (51k iterations)\r                                                                                   \rBenchmarking redux/20: Analyzing\r                                \r<span style=\"color: #00aa00\">redux/20</span>                time:   [<span style=\"font-weight: lighter\">92.719 us</span> <span style=\"font-weight: bold\">95.588 us</span> <span style=\"font-weight: lighter\">97.972 us</span>]\r\nBenchmarking redux/22\r                     \rBenchmarking redux/22: Warming up for 200.00 ms\r                                               \rBenchmarking redux/22: Collecting 10 samples in estimated 5.0061 s (37k iterations)\r                                                                                   \rBenchmarking redux/22: Analyzing\r                                \r<span style=\"color: #00aa00\">redux/22</span>                time:   [<span style=\"font-weight: lighter\">136.07 us</span> <span style=\"font-weight: bold\">137.34 us</span> <span style=\"font-weight: lighter\">138.74 us</span>]\r\n<span style=\"color: #aa5500\">Found 2 outliers among 10 measurements (20.00%)</span>\r\n  1 (10.00%) high mild\r\n  1 (10.00%) high severe\r\nBenchmarking redux/25\r                     \rBenchmarking redux/25: Warming up for 200.00 ms\r                                               \rBenchmarking redux/25: Collecting 10 samples in estimated 5.0066 s (29k iterations)\r                                                                                   \rBenchmarking redux/25: Analyzing\r                                \r<span style=\"color: #00aa00\">redux/25</span>                time:   [<span style=\"font-weight: lighter\">170.58 us</span> <span style=\"font-weight: bold\">173.51 us</span> <span style=\"font-weight: lighter\">176.65 us</span>]\r\n<span style=\"color: #aa5500\">Found 1 outliers among 10 measurements (10.00%)</span>\r\n  1 (10.00%) low mild\r\nBenchmarking redux/27\r                     \rBenchmarking redux/27: Warming up for 200.00 ms\r                                               \rBenchmarking redux/27: Collecting 10 samples in estimated 5.0041 s (27k iterations)\r                                                                                   \rBenchmarking redux/27: Analyzing\r                                \r<span style=\"color: #00aa00\">redux/27</span>                time:   [<span style=\"font-weight: lighter\">171.81 us</span> <span style=\"font-weight: bold\">174.65 us</span> <span style=\"font-weight: lighter\">178.60 us</span>]\r\nBenchmarking redux/30\r                     \rBenchmarking redux/30: Warming up for 200.00 ms\r                                               \rBenchmarking redux/30: Collecting 10 samples in estimated 5.0081 s (26k iterations)\r                                                                                   \rBenchmarking redux/30: Analyzing\r                                \r<span style=\"color: #00aa00\">redux/30</span>                time:   [<span style=\"font-weight: lighter\">190.32 us</span> <span style=\"font-weight: bold\">192.94 us</span> <span style=\"font-weight: lighter\">194.77 us</span>]\r\nBenchmarking redux/32\r                     \rBenchmarking redux/32: Warming up for 200.00 ms\r                                               \rBenchmarking redux/32: Collecting 10 samples in estimated 5.0078 s (22k iterations)\r                                                                                   \rBenchmarking redux/32: Analyzing\r                                \r<span style=\"color: #00aa00\">redux/32</span>                time:   [<span style=\"font-weight: lighter\">218.99 us</span> <span style=\"font-weight: bold\">222.38 us</span> <span style=\"font-weight: lighter\">225.60 us</span>]\r\n<span style=\"color: #aa5500\">Found 3 outliers among 10 measurements (30.00%)</span>\r\n  2 (20.00%) low mild\r\n  1 (10.00%) high mild\r\n\r\n</pre>"]}]]}]]}]]},{"t":"Para","c":[{"t":"Str","c":"Výsledná"},{"t":"Space"},{"t":"Str","c":"měření"},{"t":"Space"},{"t":"Str","c":"najdeme"},{"t":"Space"},{"t":"Str","c":"ve"},{"t":"Space"},{"t":"Str","c":"složce"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"solver/target/criterion/"]},{"t":"Str","c":"."},{"t":"Space"},{"t":"Str","c":"Zahrnují"},{"t":"Space"},{"t":"Str","c":"jak"},{"t":"SoftBreak"},{"t":"Str","c":"hotové"},{"t":"Space"},{"t":"Str","c":"reporty"},{"t":"Space"},{"t":"Str","c":"jednotlivých"},{"t":"Space"},{"t":"Str","c":"algoritmů"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"srovnáním"},{"t":"Space"},{"t":"Str","c":"doby"},{"t":"Space"},{"t":"Str","c":"běhu"},{"t":"Space"},{"t":"Str","c":"přes"},{"t":"Space"},{"t":"Str","c":"různé"},{"t":"Space"},{"t":"Str","c":"hodnoty"},{"t":"SoftBreak"},{"t":"Math","c":[{"t":"InlineMath"},"n"]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"tak"},{"t":"Space"},{"t":"Str","c":"i"},{"t":"Space"},{"t":"Str","c":"detailní"},{"t":"Space"},{"t":"Str","c":"záznamy"},{"t":"Space"},{"t":"Str","c":"naměřených"},{"t":"Space"},{"t":"Str","c":"dat"},{"t":"Space"},{"t":"Str","c":"ve"},{"t":"Space"},{"t":"Str","c":"formátu"},{"t":"Space"},{"t":"Str","c":"JSON."}]},{"t":"Header","c":[3,["srovnání-algoritmů",[],[]],[{"t":"Str","c":"Srovnání"},{"t":"Space"},{"t":"Str","c":"algoritmů"}]]},{"t":"Para","c":[{"t":"Str","c":"Pro"},{"t":"Space"},{"t":"Str","c":"zjednodušení"},{"t":"Space"},{"t":"Str","c":"zápisu"},{"t":"Space"},{"t":"Str","c":"jsou"},{"t":"Space"},{"t":"Str","c":"algoritmy"},{"t":"Space"},{"t":"Str","c":"pojmenované"},{"t":"Space"},{"t":"Str","c":"zkráceně."},{"t":"Space"},{"t":"Str","c":"Zkratka"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"přehledu"},{"t":"SoftBreak"},{"t":"Str","c":"níže"},{"t":"Space"},{"t":"Str","c":"odkazuje"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"podsekci"},{"t":"Space"},{"t":"Str","c":"popisující"},{"t":"Space"},{"t":"Str","c":"příslušnou"},{"t":"Space"},{"t":"Str","c":"implementaci."}]},{"t":"BulletList","c":[[{"t":"Plain","c":[{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"bb"]}],["#branch--bound",""]]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"metoda"},{"t":"Space"},{"t":"Str","c":"větví"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"hranic"}]}],[{"t":"Plain","c":[{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"dpc"]}],["#dynamické-programování",""]]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"dynamické"},{"t":"Space"},{"t":"Str","c":"programování"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"rozkladem"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"ceny"}]}],[{"t":"Plain","c":[{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"dpw"]}],["#dynamické-programování",""]]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"dynamické"},{"t":"Space"},{"t":"Str","c":"programování"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"rozkladem"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"váhy"}]}],[{"t":"Plain","c":[{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"fptas1"]}],["#fptas",""]]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"(postavený"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"dpc"]},{"t":"Str","c":")"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon = 0.1"]}]}],[{"t":"Plain","c":[{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"fptas2"]}],["#fptas",""]]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"(postavený"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"dpc"]},{"t":"Str","c":")"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon = 0.01"]}]}],[{"t":"Plain","c":[{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"greedy"]}],["#hladový-přístup",""]]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"hladový"},{"t":"Space"},{"t":"Str","c":"algoritmus"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"heuristiky"},{"t":"Space"},{"t":"Str","c":"poměru"},{"t":"Space"},{"t":"Str","c":"cena/váha"}]}],[{"t":"Plain","c":[{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"redux"]}],["#hladový-přístup----redux",""]]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"greedy"]},{"t":"Space"},{"t":"Str","c":"+"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"pouze"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"nejdražším"},{"t":"Space"},{"t":"Str","c":"předmětem"}]}]]},{"t":"Para","c":[{"t":"Str","c":"Zpracování"},{"t":"Space"},{"t":"Str","c":"měřených"},{"t":"Space"},{"t":"Str","c":"dat"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"srovnávací"},{"t":"Space"},{"t":"Str","c":"grafy"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"provedl"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"Pythonu."}]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["",["python","eval"],[]],"<<preprocessing>>\n\n<<performance-chart>>"]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\">&lt;Figure size 1008x576 with 1 Axes&gt;&lt;Figure size 1008x576 with 1 Axes&gt;</pre>"]}]]}]]}]]},{"t":"CodeBlock","c":[["preprocessing",["python","bootstrap-fold"],[]],"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport json\nimport os\nfrom pandas.core.tools.numeric import to_numeric\n\n# load the mean runtime per algorithm. The data is stored in the\n# algorithm/n/estimates.json file, where n is the size of the input.\n# The mean is in the estimate.mean.point_estimate field.\n\n# TODO: keep this in a better place (duplicities between here and bench.rs)\nalgs = [ \"bb\"\n       , \"dpc\"\n       , \"dpw\"\n       , \"fptas1\"\n       , \"fptas2\"\n       , \"greedy\"\n       , \"redux\"\n       ]\n\nn_values = [4, 10, 15, 20, 22, 25, 27, 30, 32]\ndata = {}\n\nfor alg in algs:\n    data[alg] = {}\n    for n in n_values:\n        est_file = os.path.join(\"solver\", \"target\", \"criterion\", alg, str(n), \"new\", \"estimates.json\")\n        if os.path.exists(est_file):\n            with open(est_file, \"r\") as f:\n                estimates = json.load(f)\n                mean = estimates[\"mean\"][\"point_estimate\"]\n                data[alg][n] = { \"mean\": mean / 1000 / 1000 / 1000\n                            }\n            err_file = os.path.join(\"docs\", \"measurements\", alg + \"_\" + str(n) + \".txt\")\n            with open(err_file, \"r\") as f:\n                measurements = pd.read_csv(f)\n                data[alg][n][\"error\"] = { \"max\": measurements[\"max\"]\n                                        , \"avg\": measurements[\"avg\"]\n                                        }\n"]},{"t":"CodeBlock","c":[["performance-chart",["python","bootstrap-fold"],[]],"\n# plot the mean runtimes and max errors\n\nfigsize = (14, 8)\nfig, ax = plt.subplots(figsize = figsize)\nplt.title(\"Průměrná doba běhu\")\nplt.xlabel(\"Velikost instance\")\nplt.ylabel(\"Průměrná doba běhu (sec)\")\nplt.xticks(n_values)\nfor alg in algs:\n    plt.plot([n for n in data[alg]], [data[alg][n][\"mean\"] for n in data[alg]], \"--o\", label=alg)\nplt.legend()\nplt.savefig(\"docs/assets/mean_runtimes.svg\")\n\nfig, ax = plt.subplots(figsize = figsize)\nplt.title(\"Závislost maximální chyby na velikosti instance\")\nplt.xlabel(\"Velikost instance\")\nplt.ylabel(\"Maximální chyba\")\nplt.xticks(n_values)\nyticks = np.append(ax.get_yticks(), [0.1, 0.01])\nax.set_yticks(yticks)\nax.grid(linestyle = \"dotted\")\nfor alg in algs:\n    plt.plot([n for n in data[alg]], [data[alg][n][\"error\"][\"max\"] for n in data[alg]], label=alg)\nplt.legend()\nplt.savefig(\"docs/assets/max_errors.svg\")"]},{"t":"Para","c":[{"t":"Str","c":"Výkon"},{"t":"Space"},{"t":"Str","c":"každého"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"byl"},{"t":"Space"},{"t":"Str","c":"změřen"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"stovce"},{"t":"Space"},{"t":"Str","c":"různých"},{"t":"Space"},{"t":"Str","c":"zadání"},{"t":"Space"},{"t":"Str","c":"z"},{"t":"Space"},{"t":"Str","c":"jednoho"},{"t":"Space"},{"t":"Str","c":"datového"},{"t":"SoftBreak"},{"t":"Str","c":"setu"},{"t":"Space"},{"t":"Str","c":"alespoň"},{"t":"Space"},{"t":"Str","c":"desetkrát"},{"t":"Space"},{"t":"Str","c":"za"},{"t":"Space"},{"t":"Str","c":"sebou"},{"t":"Space"},{"t":"Str","c":"(přesný"},{"t":"Space"},{"t":"Str","c":"počet"},{"t":"Space"},{"t":"Str","c":"spuštění"},{"t":"Space"},{"t":"Str","c":"řídí"},{"t":"Space"},{"t":"Str","c":"knihovna"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"SoftBreak"},{"t":"Str","c":"závislosti"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"výkonu"},{"t":"Space"},{"t":"Str","c":"algoritmu)."},{"t":"Space"},{"t":"Str","c":"Vyobrazený"},{"t":"Space"},{"t":"Str","c":"čas"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"proto"},{"t":"Space"},{"t":"Str","c":"stokrát"},{"t":"Space"},{"t":"Str","c":"vyšší,"},{"t":"Space"},{"t":"Str","c":"než"},{"t":"SoftBreak"},{"t":"Str","c":"skutečná"},{"t":"Space"},{"t":"Str","c":"doba"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"jedné"},{"t":"Space"},{"t":"Str","c":"instance"},{"t":"Space"},{"t":"Str","c":"problému"},{"t":"Space"},{"t":"Str","c":"dané"},{"t":"Space"},{"t":"Str","c":"velikosti."}]},{"t":"Para","c":[{"t":"Image","c":[["",[],[]],[{"t":"Str","c":"Závislost"},{"t":"Space"},{"t":"Str","c":"doby"},{"t":"Space"},{"t":"Str","c":"běhu"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"počtu"},{"t":"Space"},{"t":"Str","c":"předmětů."}],["assets/mean_runtimes.svg","fig:"]]}]},{"t":"Para","c":[{"t":"Str","c":"Graf"},{"t":"Space"},{"t":"Str","c":"maximální"},{"t":"Space"},{"t":"Str","c":"chyby"},{"t":"Space"},{"t":"Str","c":"zvýrazňuje"},{"t":"Space"},{"t":"Str","c":"hranice"},{"t":"Space"},{"t":"Str","c":"požadované"},{"t":"Space"},{"t":"Str","c":"od"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"algoritmu."},{"t":"Space"},{"t":"Str","c":"Zajímavé"},{"t":"SoftBreak"},{"t":"Str","c":"je,"},{"t":"Space"},{"t":"Str","c":"že"},{"t":"Space"},{"t":"Str","c":"maximální"},{"t":"Space"},{"t":"Str","c":"chyba"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"relativně"},{"t":"Space"},{"t":"Str","c":"hluboko"},{"t":"Space"},{"t":"Str","c":"pod"},{"t":"Space"},{"t":"Str","c":"požadovanou"},{"t":"Space"},{"t":"Str","c":"horní"},{"t":"Space"},{"t":"Str","c":"mezí."}]},{"t":"Para","c":[{"t":"Image","c":[["",[],[]],[{"t":"Str","c":"Maximální"},{"t":"Space"},{"t":"Str","c":"chyba"},{"t":"Space"},{"t":"Str","c":"řešení."}],["assets/max_errors.svg","fig:"]]}]},{"t":"Header","c":[3,["analýza",[],[]],[{"t":"Str","c":"Analýza"}]]},{"t":"Para","c":[{"t":"Str","c":"Detailní"},{"t":"Space"},{"t":"Str","c":"analýza"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"dostupná"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon = 0.1"]},{"t":"Space"},{"t":"Str","c":"a"},{"t":"SoftBreak"},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon = 0.01"]},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"reportu"},{"t":"Space"},{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"fptas1"]}],["criterion/fptas1/report/index.html",""]]},{"t":"Str","c":","},{"t":"SoftBreak"},{"t":"Str","c":"resp."},{"t":"Space"},{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"fptas2"]}],["criterion/fptas2/report/index.html",""]]},{"t":"Str","c":"."}]},{"t":"Header","c":[4,["odpovídají-obě-závislosti-kvality-a-času-předpokladům",[],[]],[{"t":"Str","c":"Odpovídají"},{"t":"Space"},{"t":"Str","c":"obě"},{"t":"Space"},{"t":"Str","c":"závislosti"},{"t":"Space"},{"t":"Str","c":"(kvality"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"času)"},{"t":"Space"},{"t":"Str","c":"předpokladům?"}]]},{"t":"Para","c":[{"t":"Str","c":"TODO"}]},{"t":"Header","c":[4,["je-některá-heuristická-metoda-systematicky-lepší-v-některém-kritériu",[],[]],[{"t":"Str","c":"Je"},{"t":"Space"},{"t":"Str","c":"některá"},{"t":"Space"},{"t":"Str","c":"heuristická"},{"t":"Space"},{"t":"Str","c":"metoda"},{"t":"Space"},{"t":"Str","c":"systematicky"},{"t":"Space"},{"t":"Str","c":"lepší"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"některém"},{"t":"Space"},{"t":"Str","c":"kritériu?"}]]},{"t":"Para","c":[{"t":"Str","c":"TODO"}]},{"t":"Header","c":[4,["jak-se-liší-obtížnost-jednotlivých-sad-z-hlediska-jednotlivých-metod",[],[]],[{"t":"Str","c":"Jak"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"liší"},{"t":"Space"},{"t":"Str","c":"obtížnost"},{"t":"Space"},{"t":"Str","c":"jednotlivých"},{"t":"Space"},{"t":"Str","c":"sad"},{"t":"Space"},{"t":"Str","c":"z"},{"t":"Space"},{"t":"Str","c":"hlediska"},{"t":"Space"},{"t":"Str","c":"jednotlivých"},{"t":"Space"},{"t":"Str","c":"metod?"}]]},{"t":"Para","c":[{"t":"Str","c":"TODO"}]},{"t":"Header","c":[4,["jaká-je-závislost-maximální-chyby-varepsilon-a-času-fptas-algoritmu-na-zvolené-přesnosti-odpovídá-předpokladům",[],[]],[{"t":"Str","c":"Jaká"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"závislost"},{"t":"Space"},{"t":"Str","c":"maximální"},{"t":"Space"},{"t":"Str","c":"chyby"},{"t":"Space"},{"t":"Str","c":"("},{"t":"Math","c":[{"t":"InlineMath"},"\\varepsilon"]},{"t":"Str","c":")"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"času"},{"t":"Space"},{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"zvolené"},{"t":"Space"},{"t":"Str","c":"přesnosti?"},{"t":"Space"},{"t":"Str","c":"Odpovídá"},{"t":"Space"},{"t":"Str","c":"předpokladům?"}]]},{"t":"Para","c":[{"t":"Str","c":"TODO"}]},{"t":"Header","c":[2,["implementace",[],[]],[{"t":"Str","c":"Implementace"}]]},{"t":"Para","c":[{"t":"Str","c":"Program"},{"t":"Space"},{"t":"Str","c":"začíná"},{"t":"Space"},{"t":"Str","c":"definicí"},{"t":"Space"},{"t":"Str","c":"datové"},{"t":"Space"},{"t":"Str","c":"struktury"},{"t":"Space"},{"t":"Str","c":"reprezentující"},{"t":"Space"},{"t":"Str","c":"instanci"},{"t":"Space"},{"t":"Str","c":"problému"},{"t":"SoftBreak"},{"t":"Str","c":"batohu."}]},{"t":"CodeBlock","c":[["problem-instance-definition",["rust"],[]],"#[derive(Debug, PartialEq, Eq, Clone)]\npub struct Instance {\n    pub id: i32, m: u32, pub items: Vec<(u32, u32)>\n}"]},{"t":"Para","c":[{"t":"Str","c":"Následující"},{"t":"Space"},{"t":"Str","c":"úryvek"},{"t":"Space"},{"t":"Str","c":"poskytuje"},{"t":"Space"},{"t":"Str","c":"ptačí"},{"t":"Space"},{"t":"Str","c":"pohled"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"strukturu"},{"t":"Space"},{"t":"Str","c":"souboru."},{"t":"Space"},{"t":"Str","c":"Použité"},{"t":"Space"},{"t":"Str","c":"knihovny"},{"t":"SoftBreak"},{"t":"Str","c":"jsou"},{"t":"Space"},{"t":"Str","c":"importovány"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"začátku,"},{"t":"Space"},{"t":"Str","c":"následuje"},{"t":"Space"},{"t":"Str","c":"již"},{"t":"Space"},{"t":"Str","c":"zmíněná"},{"t":"Space"},{"t":"Str","c":"definice"},{"t":"Space"},{"t":"Str","c":"instance"},{"t":"Space"},{"t":"Str","c":"problému,"},{"t":"SoftBreak"},{"t":"Str","c":"dále"},{"t":"Space"},{"t":"Str","c":"funkce"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"main()"]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"parser,"},{"t":"Space"},{"t":"Str","c":"definice"},{"t":"Space"},{"t":"Str","c":"struktury"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"její"},{"t":"Space"},{"t":"Str","c":"podpůrné"},{"t":"Space"},{"t":"Str","c":"funkce,"},{"t":"SoftBreak"},{"t":"Str","c":"samotné"},{"t":"Space"},{"t":"Str","c":"algoritmy"},{"t":"Space"},{"t":"Str","c":"řešiče"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"neposlední"},{"t":"Space"},{"t":"Str","c":"řadě"},{"t":"Space"},{"t":"Str","c":"sada"},{"t":"Space"},{"t":"Str","c":"automatických"},{"t":"Space"},{"t":"Str","c":"testů."}]},{"t":"CodeBlock","c":[["",["rust"],[["file","solver/src/lib.rs"]]],"<<imports>>\n\n<<algorithm-map>>\n\npub fn solve_stream<'a, T>(\n    alg: for <'b> fn(&'b Instance) -> Solution<'b>,\n    solutions: HashMap<(u32, i32), OptimalSolution>,\n    stream: &mut T\n) -> Result<Vec<(u32, f64)>> where T: BufRead {\n    let mut results = vec![];\n    loop {\n        match parse_line(stream)?.as_ref().map(|inst| (inst, alg(inst))) {\n            Some((inst, sln)) => {\n                let optimal = &solutions[&(inst.items.len() as u32, inst.id)];\n                let error = 1.0 - sln.cost as f64 / optimal.cost as f64;\n                results.push((sln.cost, error))\n            },\n            None => return Ok(results)\n        }\n    }\n}\n\nuse std::result::Result as IOResult;\npub fn list_input_files(r: Range<u32>) -> Result<Vec<IOResult<DirEntry, std::io::Error>>> {\n    let f = |res: &IOResult<DirEntry, std::io::Error> | res.as_ref().ok().filter(|f| {\n        let file_name = f.file_name();\n        let file_name = file_name.to_str().unwrap();\n        // keep only regular files\n        f.file_type().unwrap().is_file() &&\n        // ... whose names start with NK,\n        file_name.starts_with(\"NK\") &&\n        // ... continue with an integer between 0 and 15,\n        file_name[2..]\n        .split('_').nth(0).unwrap().parse::<u32>().ok()\n        .filter(|n| r.contains(n)).is_some() &&\n        // ... and end with `_inst.dat` (for \"instance\").\n        file_name.ends_with(\"_inst.dat\")\n    }).is_some();\n    Ok(read_dir(\"./ds/\")?.filter(f).collect())\n}\n\n<<problem-instance-definition>>\n\n<<solution-definition>>\n\n<<parser>>\n\nimpl Instance {\n    <<solver-dpw>>\n\n    <<solver-dpc>>\n\n    <<solver-fptas>>\n\n    <<solver-greedy>>\n\n    <<solver-greedy-redux>>\n\n    <<solver-bb>>\n\n    <<solver-bf>>\n}\n\n<<tests>>"]},{"t":"Para","c":[{"t":"Str","c":"Řešení"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"podobě"},{"t":"Space"},{"t":"Str","c":"datové"},{"t":"Space"},{"t":"Str","c":"struktury"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"Solution"]},{"t":"Space"},{"t":"Str","c":"má"},{"t":"Space"},{"t":"Str","c":"kromě"},{"t":"Space"},{"t":"Str","c":"reference"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"instanci"},{"t":"SoftBreak"},{"t":"Str","c":"problému"},{"t":"Space"},{"t":"Str","c":"především"},{"t":"Space"},{"t":"Str","c":"bit"},{"t":"Space"},{"t":"Str","c":"array"},{"t":"Space"},{"t":"Str","c":"udávající"},{"t":"Space"},{"t":"Str","c":"množinu"},{"t":"Space"},{"t":"Str","c":"předmětů"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"pomyslném"},{"t":"Space"},{"t":"Str","c":"batohu."},{"t":"SoftBreak"},{"t":"Str","c":"Zároveň"},{"t":"Space"},{"t":"Str","c":"nese"},{"t":"Space"},{"t":"Str","c":"informaci"},{"t":"Space"},{"t":"Str","c":"o"},{"t":"Space"},{"t":"Str","c":"počtu"},{"t":"Space"},{"t":"Str","c":"navštívených"},{"t":"Space"},{"t":"Str","c":"konfigurací"},{"t":"Space"},{"t":"Str","c":"při"},{"t":"Space"},{"t":"Str","c":"jeho"},{"t":"Space"},{"t":"Str","c":"výpočtu."}]},{"t":"CodeBlock","c":[["solution-definition",["rust"],[]],"pub type Config = BitArr!(for 64);\n\n#[derive(PartialEq, Eq, Clone, Copy, Debug)]\npub struct Solution<'a> { weight: u32, pub cost: u32, cfg: Config, pub inst: &'a Instance }\n\n#[derive(Debug, PartialEq, Eq, Clone)]\npub struct OptimalSolution { id: i32, pub cost: u32, cfg: Config }\n\n<<solution-helpers>>"]},{"t":"Para","c":[{"t":"Str","c":"Protože"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"strukturami"},{"t":"Space"},{"t":"Str","c":"typu"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"Solution"]},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"algoritmech"},{"t":"Space"},{"t":"Str","c":"pracuje"},{"t":"Space"},{"t":"Str","c":"hojně,"},{"t":"SoftBreak"},{"t":"Str","c":"implementoval"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"ně"},{"t":"Space"},{"t":"Str","c":"koncept"},{"t":"Space"},{"t":"Str","c":"řazení"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"pomocné"},{"t":"Space"},{"t":"Str","c":"metody"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"počítání"},{"t":"SoftBreak"},{"t":"Str","c":"navštívených"},{"t":"Space"},{"t":"Str","c":"konfigurací"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"přidávání"},{"t":"Space"},{"t":"Str","c":"předmětů"},{"t":"Space"},{"t":"Str","c":"do"},{"t":"Space"},{"t":"Str","c":"batohu."}]},{"t":"CodeBlock","c":[["solution-helpers",["rust","bootstrap-fold"],[]],"impl <'a> PartialOrd for Solution<'a> {\n    fn partial_cmp(&self, other: &Self) -> Option<cmp::Ordering> {\n        use cmp::Ordering;\n        let Solution {weight, cost, ..} = self;\n        Some(match cost.cmp(&other.cost) {\n            Ordering::Equal => weight.cmp(&other.weight).reverse(),\n            other => other,\n        })\n    }\n}\n\nimpl <'a> Ord for Solution<'a> {\n    fn cmp(&self, other: &Self) -> cmp::Ordering {\n        self.partial_cmp(other).unwrap()\n    }\n}\n\nimpl <'a> Solution<'a> {\n    fn with(mut self, i: usize) -> Solution<'a> {\n        let (w, c) = self.inst.items[i];\n        if !self.cfg[i] {\n            self.cfg.set(i, true);\n            self.weight += w;\n            self.cost += c;\n        }\n        self\n    }\n\n    fn default(inst: &'a Instance) -> Solution<'a> {\n        Solution { weight: 0, cost: 0, cfg: Config::default(), inst }\n    }\n\n    fn overweight(inst: &'a Instance) -> Solution<'a> {\n        Solution { weight: u32::MAX, cost: 0, cfg: Config::default(), inst }\n    }\n}"]},{"t":"Header","c":[3,["algoritmy",[],[]],[{"t":"Str","c":"Algoritmy"}]]},{"t":"Para","c":[{"t":"Str","c":"Aby"},{"t":"Space"},{"t":"Str","c":"bylo"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"jednotlivým"},{"t":"Space"},{"t":"Str","c":"implementacím"},{"t":"Space"},{"t":"Str","c":"jednoduché"},{"t":"Space"},{"t":"Str","c":"přistupovat,"},{"t":"Space"},{"t":"Str","c":"všechny"},{"t":"SoftBreak"},{"t":"Str","c":"implementované"},{"t":"Space"},{"t":"Str","c":"algoritmy"},{"t":"Space"},{"t":"Str","c":"jsou"},{"t":"Space"},{"t":"Str","c":"uloženy"},{"t":"Space"},{"t":"Str","c":"pod"},{"t":"Space"},{"t":"Str","c":"svými"},{"t":"Space"},{"t":"Str","c":"názvy"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"BTreeMap"]},{"t":"Str","c":"ě."},{"t":"Space"},{"t":"Str","c":"Tu"},{"t":"SoftBreak"},{"t":"Str","c":"používáme"},{"t":"Space"},{"t":"Str","c":"při"},{"t":"Space"},{"t":"Str","c":"vybírání"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"pomocí"},{"t":"Space"},{"t":"Str","c":"argumentu"},{"t":"Space"},{"t":"Str","c":"předaného"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"příkazové"},{"t":"Space"},{"t":"Str","c":"řádce,"},{"t":"SoftBreak"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"testovacím"},{"t":"Space"},{"t":"Str","c":"kódu"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"testy"},{"t":"Space"},{"t":"Str","c":"všech"},{"t":"Space"},{"t":"Str","c":"implementací"},{"t":"Space"},{"t":"Str","c":"atp."}]},{"t":"CodeBlock","c":[["algorithm-map",["rust"],[]],"pub fn get_algorithms() -> BTreeMap<&'static str, fn(&Instance) -> Solution> {\n    let cast = |x: fn(&Instance) -> Solution| x;\n    // the BTreeMap works as a trie, maintaining alphabetic order\n    BTreeMap::from([\n        (\"bf\",     cast(Instance::brute_force)),\n        (\"bb\",     cast(Instance::branch_and_bound)),\n        (\"dpc\",    cast(Instance::dynamic_programming_c)),\n        (\"dpw\",    cast(Instance::dynamic_programming_w)),\n        (\"fptas1\", cast(|inst| inst.fptas(10f64.powi(-1)))),\n        (\"fptas2\", cast(|inst| inst.fptas(10f64.powi(-2)))),\n        (\"greedy\", cast(Instance::greedy)),\n        (\"redux\",  cast(Instance::greedy_redux)),\n    ])\n}"]},{"t":"Header","c":[4,["hladový-přístup",[],[]],[{"t":"Str","c":"Hladový"},{"t":"Space"},{"t":"Str","c":"přístup"}]]},{"t":"Para","c":[{"t":"Str","c":"Implementace"},{"t":"Space"},{"t":"Str","c":"hladové"},{"t":"Space"},{"t":"Str","c":"strategie"},{"t":"Space"},{"t":"Str","c":"využívá"},{"t":"Space"},{"t":"Str","c":"knihovny"},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"permutation"]}],["https://crates.io/crates/permutation",""]]},{"t":"Str","c":"."},{"t":"Space"},{"t":"Str","c":"Problém"},{"t":"Space"},{"t":"Str","c":"ve"},{"t":"Space"},{"t":"Str","c":"skutečnosti"},{"t":"SoftBreak"},{"t":"Str","c":"řešíme"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"isomorfní"},{"t":"Space"},{"t":"Str","c":"instanci,"},{"t":"Space"},{"t":"Str","c":"která"},{"t":"Space"},{"t":"Str","c":"má"},{"t":"Space"},{"t":"Str","c":"předměty"},{"t":"Space"},{"t":"Str","c":"uspořádané."},{"t":"Space"},{"t":"Str","c":"Jediné,"},{"t":"Space"},{"t":"Str","c":"co"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"změní,"},{"t":"SoftBreak"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"pořadí,"},{"t":"Space"},{"t":"Str","c":"ve"},{"t":"Space"},{"t":"Str","c":"kterém"},{"t":"Space"},{"t":"Str","c":"předměty"},{"t":"Space"},{"t":"Str","c":"navštěvujeme."},{"t":"Space"},{"t":"Str","c":"Proto"},{"t":"Space"},{"t":"Str","c":"stačí"},{"t":"Space"},{"t":"Str","c":"aplikovat"},{"t":"Space"},{"t":"Str","c":"řadicí"},{"t":"SoftBreak"},{"t":"Str","c":"permutaci"},{"t":"Space"},{"t":"Str","c":"předmětů"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"posloupnost"},{"t":"Space"},{"t":"Str","c":"indexů,"},{"t":"Space"},{"t":"Str","c":"které"},{"t":"Space"},{"t":"Str","c":"procházíme."},{"t":"Space"},{"t":"Str","c":"Přesně"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"dělá"},{"t":"Space"},{"t":"Str","c":"výraz"},{"t":"SoftBreak"},{"t":"Code","c":[["",[],[]],"(0..items.len()).map(ord)"]},{"t":"Str","c":"."}]},{"t":"CodeBlock","c":[["solver-greedy",["rust"],[]],"fn greedy(&self) -> Solution {\n    use ::permutation::*;\n    let Instance {m, items, ..} = self;\n    fn ratio((w, c): (u32, u32)) -> f64 { c as f64 / w as f64 }\n    let permutation = sort_by(\n        &(items)[..],\n        |a, b|\n            ratio(*a)\n            .partial_cmp(&ratio(*b))\n            .unwrap()\n            .reverse() // max value first\n    );\n    let ord = { #[inline] |i| permutation.apply_idx(i) };\n\n    let mut sol = Solution::default(self);\n    for i in (0..items.len()).map(ord) {\n        let (w, _c) = items[i];\n        if sol.weight + w <= *m {\n            sol = sol.with(i);\n        } else { break }\n    }\n\n    sol\n}"]},{"t":"Header","c":[4,["hladový-přístup-redux",[],[]],[{"t":"Str","c":"Hladový"},{"t":"Space"},{"t":"Str","c":"přístup"},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"redux"}]]},{"t":"Para","c":[{"t":"Str","c":"Redux"},{"t":"Space"},{"t":"Str","c":"verze"},{"t":"Space"},{"t":"Str","c":"hladové"},{"t":"Space"},{"t":"Str","c":"strategie"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"více"},{"t":"Space"},{"t":"Str","c":"méně"},{"t":"Space"},{"t":"Str","c":"deklarativní."},{"t":"Space"},{"t":"Str","c":"Výsledek"},{"t":"Space"},{"t":"Str","c":"redux"},{"t":"SoftBreak"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"maximum"},{"t":"Space"},{"t":"Str","c":"z"},{"t":"Space"},{"t":"Str","c":"hladového"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"sestávajícího"},{"t":"Space"},{"t":"Str","c":"pouze"},{"t":"Space"},{"t":"Str","c":"z"},{"t":"SoftBreak"},{"t":"Str","c":"nejdražšího"},{"t":"Space"},{"t":"Str","c":"předmětu."},{"t":"Space"},{"t":"Str","c":"K"},{"t":"Space"},{"t":"Str","c":"indexu"},{"t":"Space"},{"t":"Str","c":"nejdražšího"},{"t":"Space"},{"t":"Str","c":"předmětu"},{"t":"Space"},{"t":"Str","c":"dojdeme"},{"t":"Space"},{"t":"Str","c":"tak,"},{"t":"Space"},{"t":"Str","c":"že"},{"t":"Space"},{"t":"Str","c":"sepneme"},{"t":"SoftBreak"},{"t":"Str","c":"posloupnosti"},{"t":"Space"},{"t":"Str","c":"indexů"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"předmětů,"},{"t":"Space"},{"t":"Str","c":"vyřadíme"},{"t":"Space"},{"t":"Str","c":"prvky,"},{"t":"Space"},{"t":"Str","c":"jejichž"},{"t":"Space"},{"t":"Str","c":"váha"},{"t":"Space"},{"t":"Str","c":"přesahuje"},{"t":"Space"},{"t":"Str","c":"kapacitu"},{"t":"SoftBreak"},{"t":"Str","c":"batohu"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"vybereme"},{"t":"Space"},{"t":"Str","c":"maximální"},{"t":"Space"},{"t":"Str","c":"prvek"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"ceny."}]},{"t":"CodeBlock","c":[["solver-greedy-redux",["rust"],[]],"fn greedy_redux(&self) -> Solution {\n    let greedy = self.greedy();\n    (0_usize..)\n        .zip(self.items.iter())\n        .filter(|(_, (w, _))| *w <= self.m)\n        .max_by_key(|(_, (_, c))| c)\n        .map(|(highest_price_index, _)|\n            max(greedy, Solution::default(self).with(highest_price_index))\n        ).unwrap_or(greedy)\n}"]},{"t":"Header","c":[4,["hrubá-síla",[],[]],[{"t":"Str","c":"Hrubá"},{"t":"Space"},{"t":"Str","c":"síla"}]]},{"t":"CodeBlock","c":[["solver-bf",["rust","bootstrap-fold"],[]],"fn brute_force(&self) -> Solution {\n    fn go<'a>(items: &'a [(u32, u32)], current: Solution<'a>, i: usize, m: u32) -> Solution<'a> {\n        if i >= items.len() { return current }\n\n        let (w, _c) = items[i];\n        let next = |current, m| go(items, current, i + 1, m);\n        let include = || {\n            let current = current.with(i);\n            next(current, m - w)\n        };\n        let exclude = || next(current, m);\n\n        if w <= m {\n            max(include(), exclude())\n        }\n        else { exclude() }\n    }\n\n    go(&self.items, Solution::default(self), 0, self.m)\n}"]},{"t":"Header","c":[4,["branch-bound",[],[]],[{"t":"Str","c":"Branch"},{"t":"Space"},{"t":"Str","c":"&"},{"t":"Space"},{"t":"Str","c":"bound"}]]},{"t":"CodeBlock","c":[["solver-bb",["rust"],[]],"fn branch_and_bound(&self) -> Solution {\n    struct State<'a>(&'a Vec<(u32, u32)>, Vec<u32>);\n    let prices: Vec<u32> = {\n        self.items.iter().rev()\n        .scan(0, |sum, (_w, c)| {\n            *sum += c;\n            Some(*sum)\n        })\n        .collect::<Vec<_>>().into_iter().rev().collect()\n    };\n\n    fn go<'a>(state: &'a State, current: Solution<'a>, best: Solution<'a>, i: usize, m: u32) -> Solution<'a> {\n        let State(items, prices) = state;\n        if i >= items.len() || current.cost + prices[i] <= best.cost {\n            return current\n        }\n\n        let (w, _c) = items[i];\n        let next = |current, best, m| go(state, current, best, i + 1, m);\n        let include = || {\n            let current = current.with(i);\n            next(current, max(current, best), m - w)\n        };\n        let exclude = |best: Solution<'a>| next(current, best, m);\n\n        if w <= m {\n            let x = include();\n            max(x, exclude(x))\n        }\n        else { exclude(best) }\n    }\n\n    // FIXME borrowck issues\n    let state = State(&self.items, prices);\n    let empty = Solution::default(self);\n    Solution { inst: self, ..go(&state, empty, empty, 0, self.m) }\n}"]},{"t":"Header","c":[4,["dynamické-programování",[],[]],[{"t":"Str","c":"Dynamické"},{"t":"Space"},{"t":"Str","c":"programování"}]]},{"t":"Para","c":[{"t":"Str","c":"Jako"},{"t":"Space"},{"t":"Str","c":"první"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"naimplementoval"},{"t":"Space"},{"t":"Str","c":"dynamické"},{"t":"Space"},{"t":"Str","c":"programování"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"rozkladem"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"váhy,"},{"t":"SoftBreak"},{"t":"Str","c":"jehož"},{"t":"Space"},{"t":"Str","c":"časová"},{"t":"Space"},{"t":"Str","c":"složitost"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"\\Theta(nM)"]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"kde"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"M"]},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"kapacita"},{"t":"Space"},{"t":"Str","c":"batohu."},{"t":"Space"},{"t":"Str","c":"Popsal"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"SoftBreak"},{"t":"Str","c":"ho"},{"t":"Space"},{"t":"Str","c":"už"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"minulém"},{"t":"Space"},{"t":"Str","c":"úkolu."}]},{"t":"CodeBlock","c":[["solver-dpw",["rust"],[]],"fn dynamic_programming_w(&self) -> Solution {\n    let Instance {m, items, ..} = self;\n    let mut next = vec![Solution::default(self); *m as usize + 1];\n    let mut last = vec![];\n\n    for i in 0..items.len() {\n        let (weight, _cost) = items[i];\n        last.clone_from(&next);\n\n        for cap in 0 ..= *m as usize {\n            let s = if (cap as u32) < weight {\n                    last[cap]\n                } else {\n                    let rem_weight = max(0, cap as isize - weight as isize) as usize;\n                    max(last[cap], last[rem_weight].with(i))\n                };\n            next[cap] = s;\n        }\n    }\n\n    *next.last().unwrap()\n}"]},{"t":"Para","c":[{"t":"Str","c":"Následně"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"(pro"},{"t":"Space"},{"t":"Str","c":"FPTAS)"},{"t":"Space"},{"t":"Str","c":"implementoval"},{"t":"Space"},{"t":"Str","c":"dynamické"},{"t":"Space"},{"t":"Str","c":"programování"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"rozkladem"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"SoftBreak"},{"t":"Str","c":"ceny,"},{"t":"Space"},{"t":"Str","c":"které"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"adaptací"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"výše."},{"t":"Space"},{"t":"Str","c":"Narozdíl"},{"t":"Space"},{"t":"Str","c":"od"},{"t":"Space"},{"t":"Str","c":"předchozího"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"SoftBreak"},{"t":"Str","c":"tady"},{"t":"Space"},{"t":"Str","c":"výchozí"},{"t":"Space"},{"t":"Str","c":"hodnotou"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"tabulce"},{"t":"Space"},{"t":"Str","c":"efektivně"},{"t":"Space"},{"t":"Str","c":"nekonečná"},{"t":"Space"},{"t":"Str","c":"váha,"},{"t":"Space"},{"t":"Str","c":"kterou"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"snažíme"},{"t":"SoftBreak"},{"t":"Str","c":"minimalizovat."},{"t":"Space"},{"t":"Str","c":"K"},{"t":"Space"},{"t":"Str","c":"reprezentaci"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"nekonečnou"},{"t":"Space"},{"t":"Str","c":"vahou"},{"t":"Space"},{"t":"Str","c":"používám"},{"t":"Space"},{"t":"Str","c":"přidruženou"},{"t":"SoftBreak"},{"t":"Str","c":"funkci"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"Solution::overweight"]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"která"},{"t":"Space"},{"t":"Str","c":"vrátí"},{"t":"Space"},{"t":"Str","c":"neplatné"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"váhou"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"2^{32} - 1"]},{"t":"Str","c":"."},{"t":"SoftBreak"},{"t":"Str","c":"Pokud"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"něj"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"průběhu"},{"t":"Space"},{"t":"Str","c":"výpočtu"},{"t":"Space"},{"t":"Str","c":"algoritmus"},{"t":"Space"},{"t":"Str","c":"narazí,"},{"t":"Space"},{"t":"Str","c":"předá"},{"t":"Space"},{"t":"Str","c":"jej"},{"t":"Space"},{"t":"Str","c":"dál"},{"t":"Space"},{"t":"Str","c":"jako"},{"t":"SoftBreak"},{"t":"Code","c":[["",[],[]],"Solution::default"]},{"t":"Space"},{"t":"Str","c":"(vždy"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"nejlevějším"},{"t":"Space"},{"t":"Str","c":"sloupci"},{"t":"Space"},{"t":"Str","c":"DP"},{"t":"Space"},{"t":"Str","c":"tabulky,"},{"t":"Space"},{"t":"Str","c":"tedy"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"last[0]"]},{"t":"Str","c":"),"},{"t":"Space"},{"t":"Str","c":"aby"},{"t":"SoftBreak"},{"t":"Str","c":"při"},{"t":"Space"},{"t":"Str","c":"přičtení"},{"t":"Space"},{"t":"Str","c":"váhy"},{"t":"Space"},{"t":"Str","c":"uvažovaného"},{"t":"Space"},{"t":"Str","c":"předmětu"},{"t":"Space"},{"t":"Str","c":"nedošlo"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"přetečení."}]},{"t":"Para","c":[{"t":"Str","c":"O"},{"t":"Space"},{"t":"Str","c":"výběr"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"minimální"},{"t":"Space"},{"t":"Str","c":"váhy"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"stará"},{"t":"Space"},{"t":"Str","c":"funkce"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"max"]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"neboť"},{"t":"Space"},{"t":"Str","c":"implementace"},{"t":"SoftBreak"},{"t":"Str","c":"uspořádání"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"typ"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"Solution"]},{"t":"Space"},{"t":"Str","c":"řadí"},{"t":"Space"},{"t":"Str","c":"nejprve"},{"t":"Space"},{"t":"Str","c":"vzestupně"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"ceny"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"následně"},{"t":"SoftBreak"},{"t":"Str","c":"sestupně"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"váhy."},{"t":"Space"},{"t":"Str","c":"V"},{"t":"Space"},{"t":"Str","c":"tomto"},{"t":"Space"},{"t":"Str","c":"případě"},{"t":"Space"},{"t":"Str","c":"porovnáváme"},{"t":"Space"},{"t":"Str","c":"vždy"},{"t":"Space"},{"t":"Str","c":"dvě"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"stejných"},{"t":"Space"},{"t":"Str","c":"cen"},{"t":"SoftBreak"},{"t":"Str","c":"(a"},{"t":"Space"},{"t":"Str","c":"nebo"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"last[cap]"]},{"t":"Space"},{"t":"Str","c":"neplatné"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"nadváhou,"},{"t":"Space"},{"t":"Str","c":"které"},{"t":"Space"},{"t":"Str","c":"má"},{"t":"Space"},{"t":"Str","c":"cenu"},{"t":"Space"},{"t":"Math","c":[{"t":"InlineMath"},"0"]},{"t":"Str","c":")."}]},{"t":"CodeBlock","c":[["solver-dpc",["rust"],[]],"fn dynamic_programming_c(&self) -> Solution {\n    let Instance {items, ..} = self;\n    let max_profit = items.iter().map(|(_, c)| *c).max().unwrap() as usize;\n    let mut next = vec![Solution::overweight(self); max_profit * items.len() + 1];\n    let mut last = vec![];\n    next[0] = Solution::default(self);\n\n    for i in 0..items.len() {\n        let (_weight, cost) = items[i];\n        last.clone_from(&next);\n\n        for cap in 1 ..= max_profit * items.len() {\n            let s = if (cap as u32) < cost {\n                    last[cap]\n                } else {\n                    let rem_cost = (cap as isize - cost as isize) as usize;\n                    let lightest_for_cost = if last[rem_cost].weight == u32::MAX {\n                        last[0] // replace the overweight solution with the empty one\n                    } else { last[rem_cost] };\n\n                    max(last[cap], lightest_for_cost.with(i))\n                };\n            next[cap] = s;\n        }\n    }\n\n    *next.iter().filter(|sln| sln.weight <= self.m).last().unwrap()\n}"]},{"t":"Header","c":[4,["fptas",[],[]],[{"t":"Str","c":"FPTAS"}]]},{"t":"Para","c":[{"t":"Str","c":"FPTAS"},{"t":"Space"},{"t":"Str","c":"algoritmus"},{"t":"Space"},{"t":"Str","c":"přeškáluje"},{"t":"Space"},{"t":"Str","c":"ceny"},{"t":"Space"},{"t":"Str","c":"předmětů"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"následně"},{"t":"Space"},{"t":"Str","c":"spustí"},{"t":"Space"},{"t":"Str","c":"dynamické"},{"t":"SoftBreak"},{"t":"Str","c":"programování"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"rozkladem"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"Space"},{"t":"Str","c":"ceny"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"upravenou"},{"t":"Space"},{"t":"Str","c":"instanci"},{"t":"Space"},{"t":"Str","c":"problému."},{"t":"Space"},{"t":"Str","c":"V"},{"t":"Space"},{"t":"Str","c":"řešení"},{"t":"SoftBreak"},{"t":"Str","c":"stačí"},{"t":"Space"},{"t":"Str","c":"opravit"},{"t":"Space"},{"t":"Str","c":"referenci"},{"t":"Space"},{"t":"Str","c":"výchozí"},{"t":"Space"},{"t":"Str","c":"instance"},{"t":"Space"},{"t":"Str","c":"("},{"t":"Code","c":[["",[],[]],"inst: self"]},{"t":"Str","c":")"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"přepočíst"},{"t":"Space"},{"t":"Str","c":"cenu"},{"t":"Space"},{"t":"Str","c":"podle"},{"t":"SoftBreak"},{"t":"Str","c":"vypočítané"},{"t":"Space"},{"t":"Str","c":"konfigurace,"},{"t":"Space"},{"t":"Str","c":"samotné"},{"t":"Space"},{"t":"Str","c":"indexy"},{"t":"Space"},{"t":"Str","c":"předmětů"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"škálováním"},{"t":"Space"},{"t":"Str","c":"nemění."}]},{"t":"CodeBlock","c":[["solver-fptas",["rust"],[]],"// TODO: are items heavier than the knapsack capacity a problem? if so, we\n// can just zero them out\nfn fptas(&self, eps: f64) -> Solution {\n    let Instance {m: _, items, ..} = self;\n    let max_profit = items.iter().map(|(_, c)| *c).max().unwrap();\n    let scaling_factor = eps * max_profit as f64 / items.len() as f64;\n    let items: Vec<(u32, u32)> = items.iter().map(|(w, c)|\n        (*w, (*c as f64 / scaling_factor).floor() as u32\n    )).collect();\n\n    let iso = Instance { items, ..*self };\n    let sln = iso.dynamic_programming_c();\n    let cost = (0usize..).zip(self.items.iter()).fold(0, |acc, (i, (_w, c))|\n        acc + sln.cfg[i] as u32 * c\n    );\n    Solution { inst: self, cost, ..sln }\n}"]},{"t":"Header","c":[2,["závěr",[],[]],[{"t":"Str","c":"Závěr"}]]},{"t":"Para","c":[{"t":"Str","c":"Tento"},{"t":"Space"},{"t":"Str","c":"úvodní"},{"t":"Space"},{"t":"Str","c":"problém"},{"t":"Space"},{"t":"Str","c":"byl"},{"t":"Space"},{"t":"Str","c":"příležitostí"},{"t":"Space"},{"t":"Str","c":"připravit"},{"t":"Space"},{"t":"Str","c":"si"},{"t":"Space"},{"t":"Str","c":"technické"},{"t":"Space"},{"t":"Str","c":"zázemí"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"SoftBreak"},{"t":"Str","c":"nadcházející"},{"t":"Space"},{"t":"Str","c":"úkoly."},{"t":"Space"},{"t":"Str","c":"Implementace,"},{"t":"Space"},{"t":"Str","c":"které"},{"t":"Space"},{"t":"Str","c":"odevzdávám,"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"značně"},{"t":"Space"},{"t":"Str","c":"spoléhají"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"SoftBreak"},{"t":"Str","c":"bezpečí"},{"t":"Space"},{"t":"Str","c":"typového"},{"t":"Space"},{"t":"Str","c":"systému"},{"t":"Space"},{"t":"Str","c":"jazyka"},{"t":"Space"},{"t":"Str","c":"Rust."},{"t":"Space"},{"t":"Str","c":"Čas"},{"t":"Space"},{"t":"Str","c":"ukáže,"},{"t":"Space"},{"t":"Str","c":"jestli"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"usnadní"},{"t":"Space"},{"t":"Str","c":"jejich"},{"t":"Space"},{"t":"Str","c":"další"},{"t":"SoftBreak"},{"t":"Str","c":"rozšiřování"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"obohacování."},{"t":"Space"},{"t":"Str","c":"Zadání"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"pokusil"},{"t":"Space"},{"t":"Str","c":"splnit"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"celém"},{"t":"Space"},{"t":"Str","c":"rozsahu,"},{"t":"Space"},{"t":"Str","c":"ale"},{"t":"SoftBreak"},{"t":"Str","c":"neměl"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"už"},{"t":"Space"},{"t":"Str","c":"čas"},{"t":"Space"},{"t":"Str","c":"implementovat"},{"t":"Space"},{"t":"Str","c":"ořezávání"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"pomocí"},{"t":"Space"},{"t":"Str","c":"fragmentální"},{"t":"Space"},{"t":"Str","c":"varianty"},{"t":"SoftBreak"},{"t":"Str","c":"problému"},{"t":"Space"},{"t":"Str","c":"batohu"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"metodě"},{"t":"Space"},{"t":"Str","c":"větví"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"hranic."}]},{"t":"Para","c":[{"t":"Str","c":"TODO:"},{"t":"Space"},{"t":"Str","c":"zhodnocení"},{"t":"Space"},{"t":"Str","c":"rozhodnutí"},{"t":"Space"},{"t":"Str","c":"z"},{"t":"Space"},{"t":"Str","c":"minulého"},{"t":"Space"},{"t":"Str","c":"úkolu"}]},{"t":"Header","c":[2,["appendix",[],[]],[{"t":"Str","c":"Appendix"}]]},{"t":"Para","c":[{"t":"Str","c":"Dodatek"},{"t":"Space"},{"t":"Str","c":"obsahuje"},{"t":"Space"},{"t":"Str","c":"nezajímavé"},{"t":"Space"},{"t":"Str","c":"části"},{"t":"Space"},{"t":"Str","c":"implementace,"},{"t":"Space"},{"t":"Str","c":"jako"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"import"},{"t":"Space"},{"t":"Str","c":"symbolů"},{"t":"Space"},{"t":"Str","c":"z"},{"t":"SoftBreak"},{"t":"Str","c":"knihoven."}]},{"t":"CodeBlock","c":[["imports",["rust","bootstrap-fold"],[]],"use std::{cmp, cmp::max,\n    ops::Range,\n    iter::Filter,\n    str::FromStr,\n    io::{BufRead, BufReader},\n    collections::{BTreeMap, HashMap},\n    fs::{read_dir, File, ReadDir, DirEntry},\n};\nuse anyhow::{Context, Result, anyhow};\nuse bitvec::prelude::BitArr;\n\n#[cfg(test)]\n#[macro_use(quickcheck)]\nextern crate quickcheck_macros;"]},{"t":"Para","c":[{"t":"Str","c":"Zpracování"},{"t":"Space"},{"t":"Str","c":"vstupu"},{"t":"Space"},{"t":"Str","c":"zajišťuje"},{"t":"Space"},{"t":"Str","c":"jednoduchý"},{"t":"Space"},{"t":"Str","c":"parser"},{"t":"Space"},{"t":"Str","c":"pracující"},{"t":"Space"},{"t":"Str","c":"řádek"},{"t":"Space"},{"t":"Str","c":"po"},{"t":"Space"},{"t":"Str","c":"řádku."},{"t":"Space"},{"t":"Str","c":"Pro"},{"t":"SoftBreak"},{"t":"Str","c":"testy"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"tu"},{"t":"Space"},{"t":"Str","c":"parser"},{"t":"Space"},{"t":"Str","c":"formátu"},{"t":"Space"},{"t":"Str","c":"souborů"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"optimálními"},{"t":"Space"},{"t":"Str","c":"řešeními."}]},{"t":"CodeBlock","c":[["parser",["rust","bootstrap-fold"],[]],"<<boilerplate>>\n\npub fn parse_line<T>(stream: &mut T) -> Result<Option<Instance>> where T: BufRead {\n    let mut input = String::new();\n    if stream.read_line(&mut input)? == 0 {\n        return Ok(None)\n    }\n\n    let mut  numbers = input.split_whitespace();\n    let id = numbers.parse_next()?;\n    let  n = numbers.parse_next()?;\n    let  m = numbers.parse_next()?;\n\n    let mut items: Vec<(u32, u32)> = Vec::with_capacity(n);\n    for _ in 0..n {\n        let w = numbers.parse_next()?;\n        let c = numbers.parse_next()?;\n        items.push((w, c));\n    }\n\n    Ok(Some(Instance {id, m, items}))\n}\n\nfn parse_solution_line<T>(mut stream: T) -> Result<Option<OptimalSolution>> where T: BufRead {\n    let mut input = String::new();\n    if stream.read_line(&mut input)? == 0 {\n        return Ok(None)\n    }\n\n    let mut    numbers = input.split_whitespace();\n    let   id = numbers.parse_next()?;\n    let    n = numbers.parse_next()?;\n    let cost = numbers.parse_next()?;\n\n    let mut items = Config::default();\n    for i in 0..n {\n        let a: u8 = numbers.parse_next()?;\n        items.set(i, a == 1);\n    }\n\n    Ok(Some(OptimalSolution {id, cost, cfg: items}))\n}\n\npub fn load_solutions() -> Result<HashMap<(u32, i32), OptimalSolution>> {\n    let mut solutions = HashMap::new();\n\n    let files = read_dir(\"../data/constructive/\")?\n        .filter(|res| res.as_ref().ok().filter(|f| {\n            let name = f.file_name().into_string().unwrap();\n            f.file_type().unwrap().is_file() &&\n            name.starts_with(\"NK\") &&\n            name.ends_with(\"_sol.dat\")\n        }).is_some());\n\n    for file in files {\n        let file = file?;\n        let n = file.file_name().into_string().unwrap()[2..].split('_').nth(0).unwrap().parse()?;\n        let mut stream = BufReader::new(File::open(file.path())?);\n        while let Some(opt) = parse_solution_line(&mut stream)? {\n            solutions.insert((n, opt.id), opt);\n        }\n    }\n\n    Ok(solutions)\n}"]},{"t":"Para","c":[{"t":"Str","c":"Trait"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"Boilerplate"]},{"t":"Space"},{"t":"Str","c":"definuje"},{"t":"Space"},{"t":"Str","c":"funkci"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"parse_next"]},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"zkrácení"},{"t":"Space"},{"t":"Str","c":"zápisu"},{"t":"Space"},{"t":"Str","c":"zpracování"},{"t":"SoftBreak"},{"t":"Str","c":"vstupu."}]},{"t":"CodeBlock","c":[["boilerplate",["rust","bootstrap-fold"],[]],"trait Boilerplate {\n    fn parse_next<T: FromStr>(&mut self) -> Result<T>\n      where <T as FromStr>::Err: std::error::Error + Send + Sync + 'static;\n}\n\nimpl Boilerplate for std::str::SplitWhitespace<'_> {\n    fn parse_next<T: FromStr>(&mut self) -> Result<T>\n      where <T as FromStr>::Err: std::error::Error + Send + Sync + 'static {\n        let str = self.next().ok_or_else(|| anyhow!(\"unexpected end of input\"))?;\n        str.parse::<T>()\n           .with_context(|| format!(\"cannot parse {}\", str))\n    }\n}"]},{"t":"Header","c":[3,["měření-výkonu",[],[]],[{"t":"Str","c":"Měření"},{"t":"Space"},{"t":"Str","c":"výkonu"}]]},{"t":"Para","c":[{"t":"Str","c":"Benchmark"},{"t":"Space"},{"t":"Str","c":"postavený"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"knihovně"},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Code","c":[["",[],[]],"Criterion.rs"]}],["https://crates.io/crates/criterion",""]]},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"nachází"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"souboru"},{"t":"Space"},{"t":"Str","c":"níže."}]},{"t":"CodeBlock","c":[["",["rust","bootstrap-fold"],[["file","solver/benches/bench.rs"]]],"extern crate solver;\n\nuse solver::*;\nuse anyhow::{Result, anyhow};\nuse std::{collections::HashMap, fs::File, io::{BufReader, Write}, ops::Range, time::Duration};\nuse criterion::{criterion_group, criterion_main, Criterion, BenchmarkId};\n\nfn full(c: &mut Criterion) -> Result<()> {\n    let algs = get_algorithms();\n    let solutions = load_solutions()?;\n    let ranges = HashMap::from([\n        (\"bb\",     0..=25),\n        (\"dpw\",    0..=30),\n        (\"dpc\",    0..=20),\n        (\"fptas1\", 0..=27),\n        (\"fptas2\", 0..=22),\n        (\"greedy\", 0..=32),\n        (\"redux\",  0..=32),\n    ]);\n\n    let mut input: HashMap<u32, Vec<Instance>> = HashMap::new();\n    let ns = [4, 10, 15, 20, 22, 25, 27, 30, 32];\n    for n in ns {\n        input.insert(n, load_input(n .. n + 1)?\n            .into_iter()\n            .filter(|inst| inst.id > 400)\n            .collect()\n        );\n    }\n\n    benchmark(algs, c, &ns, ranges, solutions, input)?;\n    Ok(())\n}\n\nfn benchmark(\n    algs: std::collections::BTreeMap<&str, fn(&Instance) -> Solution>,\n    c: &mut Criterion, ns: &[u32], ranges: HashMap<&str, std::ops::RangeInclusive<u32>>,\n    solutions: HashMap<(u32, i32), OptimalSolution>,\n    input: HashMap<u32, Vec<Instance>>\n) -> Result<(), anyhow::Error> {\n    Ok(for (name, alg) in algs.iter() {\n        let mut group = c.benchmark_group(*name);\n        group.sample_size(10).warm_up_time(Duration::from_millis(200));\n\n        for n in ns {\n            if !ranges.get(*name).filter(|r| r.contains(&n)).is_some() {\n                continue;\n            }\n\n            let (max, avg) = measure(&mut group, *alg, &solutions, *n, &input[&n]);\n            let avg = avg / *n as f64;\n\n            let mut file = File::create(format!(\"../docs/measurements/{}_{}.txt\", name, n))?;\n            file.write_all(format!(\"max,avg\\n{},{}\", max, avg).as_bytes())?;\n        }\n        group.finish();\n    })\n}\n\nfn measure(\n    group: &mut criterion::BenchmarkGroup<criterion::measurement::WallTime>,\n    alg: for<'a> fn(&'a Instance) -> Solution<'a>,\n    solutions: &HashMap<(u32, i32), OptimalSolution>,\n    n: u32,\n    instances: &Vec<Instance>\n) -> (f64, f64) {\n    let mut stats = (0.0, 0.0);\n    group.bench_with_input(\n        BenchmarkId::from_parameter(n),\n        instances,\n        |b, ins| b.iter(\n            || ins.iter().for_each(|inst| {\n                let sln = alg(inst);\n                let optimal = &solutions[&(n, inst.id)];\n                let error = 1.0 - sln.cost as f64 / optimal.cost as f64;\n                let (max, avg) = stats;\n                stats = (if error > max { error } else { max }, avg + error);\n            })\n        )\n    );\n\n    stats\n}\n\nfn load_input(r: Range<u32>) -> Result<Vec<Instance>> {\n    let mut instances = Vec::new();\n\n    for file in list_input_files(r)? {\n        let file = file?;\n        let mut r = BufReader::new(File::open(file.path())?);\n        while let Some(inst) = parse_line(&mut r)? {\n            instances.push(inst);\n        }\n    }\n\n    Ok(instances)\n}\n\nfn proxy(c: &mut Criterion) {\n    full(c).unwrap()\n}\n\ncriterion_group!(benches, proxy);\ncriterion_main!(benches);"]},{"t":"Header","c":[3,["spouštění-jednotlivých-řešičů",[],[]],[{"t":"Str","c":"Spouštění"},{"t":"Space"},{"t":"Str","c":"jednotlivých"},{"t":"Space"},{"t":"Str","c":"řešičů"}]]},{"t":"Para","c":[{"t":"Str","c":"Projekt"},{"t":"Space"},{"t":"Str","c":"podporuje"},{"t":"Space"},{"t":"Str","c":"sestavení"},{"t":"Space"},{"t":"Str","c":"spustitelného"},{"t":"Space"},{"t":"Str","c":"souboru"},{"t":"Space"},{"t":"Str","c":"schopného"},{"t":"Space"},{"t":"Str","c":"zpracovat"},{"t":"Space"},{"t":"Str","c":"libovolný"},{"t":"SoftBreak"},{"t":"Str","c":"vstup"},{"t":"Space"},{"t":"Str","c":"ze"},{"t":"Space"},{"t":"Str","c":"zadání"},{"t":"Space"},{"t":"Str","c":"za"},{"t":"Space"},{"t":"Str","c":"pomoci"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"zvoleného"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"příkazové"},{"t":"Space"},{"t":"Str","c":"řádce."},{"t":"Space"},{"t":"Str","c":"Zdrojový"},{"t":"Space"},{"t":"Str","c":"kód"},{"t":"SoftBreak"},{"t":"Str","c":"tohoto"},{"t":"Space"},{"t":"Str","c":"rozhraní"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"nachází"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"souboru"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"solver/src/bin/main.rs"]},{"t":"Str","c":"."},{"t":"Space"},{"t":"Str","c":"Na"},{"t":"Space"},{"t":"Str","c":"standardní"},{"t":"SoftBreak"},{"t":"Str","c":"výstup"},{"t":"Space"},{"t":"Str","c":"vypisuje"},{"t":"Space"},{"t":"Str","c":"cenu"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"chybu"},{"t":"Space"},{"t":"Str","c":"řešení,"},{"t":"Space"},{"t":"Str","c":"spoléhá"},{"t":"Space"},{"t":"Str","c":"ovšem"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"to,"},{"t":"Space"},{"t":"Str","c":"že"},{"t":"Space"},{"t":"Str","c":"mezi"},{"t":"Space"},{"t":"Str","c":"optimálními"},{"t":"SoftBreak"},{"t":"Str","c":"řešeními"},{"t":"Space"},{"t":"Str","c":"najde"},{"t":"Space"},{"t":"Str","c":"i"},{"t":"Space"},{"t":"Str","c":"to"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"kombinaci"},{"t":"Space"},{"t":"Str","c":"velikosti"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"Space"},{"t":"Str","c":"ID"},{"t":"Space"},{"t":"Str","c":"zadané"},{"t":"Space"},{"t":"Str","c":"instance."}]},{"t":"CodeBlock","c":[["",["rust"],[["file","solver/src/bin/main.rs"]]],"extern crate solver;\n\nuse std::io::stdin;\nuse solver::*;\nuse anyhow::{Result, anyhow};\n\nfn main() -> Result<()> {\n    let algorithms = get_algorithms();\n    let solutions = load_solutions()?;\n\n    let alg = *{\n        <<select-algorithm>>\n    }?;\n\n    for (cost, error) in solve_stream(alg, solutions, &mut stdin().lock())? {\n        println!(\"{} {}\", cost, error);\n    }\n    Ok(())\n}"]},{"t":"Para","c":[{"t":"Str","c":"Funkci"},{"t":"Space"},{"t":"Str","c":"příslušnou"},{"t":"Space"},{"t":"Str","c":"vybranému"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"vrátíme"},{"t":"Space"},{"t":"Str","c":"jako"},{"t":"Space"},{"t":"Str","c":"hodnotu"},{"t":"Space"},{"t":"Str","c":"tohoto"},{"t":"Space"},{"t":"Str","c":"bloku:"}]},{"t":"CodeBlock","c":[["select-algorithm",["rust","bootstrap-fold"],[]],"let args: Vec<String> = std::env::args().collect();\nif args.len() == 2 {\n    let alg = &args[1][..];\n    if let Some(f) = algorithms.get(alg) {\n        Ok(f)\n    } else {\n        Err(anyhow!(\"\\\"{}\\\" is not a known algorithm\", alg))\n    }\n} else {\n    println!(\n        \"Usage: {} <algorithm>\\n\\twhere <algorithm> is one of {}\",\n        args[0],\n        algorithms.keys().map(ToString::to_string).collect::<Vec<_>>().join(\", \")\n    );\n    Err(anyhow!(\"Expected 1 argument, got {}\", args.len() - 1))\n}"]},{"t":"Header","c":[3,["automatické-testy",[],[]],[{"t":"Str","c":"Automatické"},{"t":"Space"},{"t":"Str","c":"testy"}]]},{"t":"Para","c":[{"t":"Str","c":"Implementaci"},{"t":"Space"},{"t":"Str","c":"doplňují"},{"t":"Space"},{"t":"Str","c":"automatické"},{"t":"Space"},{"t":"Str","c":"testy"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"ověření"},{"t":"Space"},{"t":"Str","c":"správnosti,"},{"t":"Space"},{"t":"Str","c":"včetně"},{"t":"SoftBreak"},{"t":"Str","c":"property-based"},{"t":"Space"},{"t":"Str","c":"testu"},{"t":"Space"},{"t":"Str","c":"s"},{"t":"Space"},{"t":"Str","c":"knihovnou"},{"t":"SoftBreak"},{"t":"Link","c":[["",[],[]],[{"t":"Str","c":"quickcheck"}],["https://github.com/BurntSushi/quickcheck",""]]},{"t":"Str","c":"."}]},{"t":"CodeBlock","c":[["tests",["rust","bootstrap-fold"],[]],"#[cfg(test)]\nmod tests {\n    use super::*;\n    use quickcheck::{Arbitrary, Gen};\n    use std::{fs::File, io::BufReader};\n\n    impl Arbitrary for Instance {\n        fn arbitrary(g: &mut Gen) -> Instance {\n            Instance {\n                id:    i32::arbitrary(g),\n                m:     u32::arbitrary(g).min(10_000),\n                items: vec![<(u32, u32)>::arbitrary(g)]\n                           .into_iter()\n                           .chain(Vec::arbitrary(g).into_iter())\n                           .take(10)\n                           .map(|(w, c): (u32, u32)| (w.min(10_000), c % 10_000))\n                           .collect(),\n            }\n        }\n\n        fn shrink(&self) -> Box<dyn Iterator<Item = Self>> {\n            let data = self.clone();\n            let chain: Vec<Instance> = quickcheck::empty_shrinker()\n                .chain(self.id   .shrink().map(|id   | Instance {id,    ..(&data).clone()}))\n                .chain(self.m    .shrink().map(|m    | Instance {m,     ..(&data).clone()}))\n                .chain(self.items.shrink().map(|items| Instance { items, ..(&data).clone() })\n                        .filter(|i| !i.items.is_empty()))\n                .collect();\n            Box::new(chain.into_iter())\n        }\n    }\n\n    impl <'a> Solution<'a> {\n        fn assert_valid(&self) {\n            let Solution { weight, cost, cfg, inst } = self;\n            let Instance { m, items, .. } = inst;\n\n            let (computed_weight, computed_cost) = items\n                .into_iter()\n                .zip(cfg)\n                .map(|((w, c), b)| {\n                    if *b { (*w, *c) } else { (0, 0) }\n                })\n                .reduce(|(a0, b0), (a1, b1)| (a0 + a1, b0 + b1))\n                .unwrap_or_default();\n\n            assert!(computed_weight <= *m);\n            assert_eq!(computed_cost, *cost);\n            assert_eq!(computed_weight, *weight);\n        }\n    }\n\n    #[test]\n    fn stupid() {\n        // let i = Instance { id: 0, m: 1, b: 0, items: vec![(1, 0), (1, 0)] };\n        // i.branch_and_bound2().assert_valid(&i);\n        let i = Instance { id: 0, m: 1, items: vec![(1, 1), (1, 2), (0, 1)] };\n        let bb = i.branch_and_bound();\n        assert_eq!(bb.cost, i.dynamic_programming_w().cost);\n        assert_eq!(bb.cost, i.dynamic_programming_c().cost);\n        assert_eq!(bb.cost, i.greedy_redux().cost);\n        assert_eq!(bb.cost, i.brute_force().cost);\n        assert_eq!(bb.cost, i.greedy().cost);\n    }\n\n    #[test]\n    fn proper() -> Result<()> {\n        type Solver = (&'static str, for<'a> fn(&'a Instance) -> Solution<'a>);\n        let algs = get_algorithms();\n        let algs: Vec<Solver> = algs.iter().map(|(s, f)| (*s, *f)).collect();\n        let opts = load_solutions()?;\n        println!(\"loaded {} optimal solutions\", opts.len());\n\n        let solve: for<'a> fn(&Vec<_>, &'a _) -> Vec<(&'static str, Solution<'a>)> =\n            |algs, inst|\n            algs.iter().map(|(name, alg): &Solver| (*name, alg(inst))).collect();\n\n        let mut files = list_input_files(0..5)?.into_iter();\n        // make sure `files` is not empty\n        let first = files.next().ok_or(anyhow!(\"no instance files loaded\"))?;\n        for file in vec![first].into_iter().chain(files) {\n            let file = file?;\n            println!(\"Testing {}\", file.file_name().to_str().unwrap());\n            // open the file\n            let mut r = BufReader::new(File::open(file.path())?);\n            // solve each instance with all algorithms\n            while let Some(slns) = parse_line(&mut r)?.as_ref().map(|x| solve(&algs, x)) {\n                // verify correctness\n                slns.iter().for_each(|(alg, s)| {\n                    eprint!(\"\\rid: {} alg: {}\\t\", s.inst.id, alg);\n                    s.assert_valid();\n                    let key = (s.inst.items.len() as u32, s.inst.id);\n                    assert!(s.cost <= opts[&key].cost);\n                });\n            }\n        }\n        Ok(())\n    }\n\n    #[test]\n    fn dpc_simple() {\n        let i = Instance { id: 0, m: 0, items: vec![(0, 1), (0, 1)] };\n        let s = i.dynamic_programming_c();\n        assert_eq!(s.cost, 2);\n        assert_eq!(s.weight, 0);\n        s.assert_valid();\n    }\n\n    #[test]\n    fn fptas_is_within_bounds() -> Result<()> {\n        let opts = load_solutions()?;\n        for eps in [0.1, 0.01] {\n            for file in list_input_files(0..5)? {\n                let file = file?;\n                let mut r = BufReader::new(File::open(file.path())?);\n                while let Some(sln) = parse_line(&mut r)?.as_ref().map(|x| x.fptas(eps)) {\n                    // make sure the solution from fptas is at least (1 - eps) * optimal cost\n                    let key = (sln.inst.items.len() as u32, sln.inst.id);\n                    println!(\"{} {} {}\", sln.cost, opts[&key].cost, (1.0 - eps) * opts[&key].cost as f64);\n                    assert!(sln.cost as f64 >= opts[&key].cost as f64 * (1.0 - eps));\n                }\n            }\n        }\n        Ok(())\n    }\n\n    #[test]\n    fn small_bb_is_correct() {\n        let a = Instance {\n            id: -10,\n            m: 165,\n            items: vec![ (86,  744)\n                       , (214, 1373)\n                       , (236, 1571)\n                       , (239, 2388)\n                       ],\n        };\n        a.branch_and_bound().assert_valid();\n    }\n\n    #[test]\n    fn bb_is_correct() -> Result<()> {\n        use std::fs::File;\n        use std::io::BufReader;\n        let inst = parse_line(\n            &mut BufReader::new(File::open(\"ds/NK15_inst.dat\")?)\n        )?.unwrap();\n        println!(\"testing {:?}\", inst);\n        inst.branch_and_bound().assert_valid();\n        Ok(())\n    }\n\n    #[quickcheck]\n    fn qc_bb_is_really_correct(inst: Instance) {\n        assert_eq!(inst.branch_and_bound().cost, inst.brute_force().cost);\n    }\n\n    #[quickcheck]\n    fn qc_dp_matches_bb(inst: Instance) {\n        assert!(inst.branch_and_bound().cost <= inst.dynamic_programming_w().cost);\n    }\n\n    #[quickcheck]\n    fn qc_dps_match(inst: Instance) {\n        assert_eq!(inst.dynamic_programming_w().cost, inst.dynamic_programming_c().cost);\n    }\n}\n"]}]}