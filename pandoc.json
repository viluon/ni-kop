{"pandoc-api-version":[1,22],"meta":{"author":{"t":"MetaInlines","c":[{"t":"Str","c":"Ondřej"},{"t":"Space"},{"t":"Str","c":"Kvapil"}]},"title":{"t":"MetaInlines","c":[{"t":"Str","c":"NI-KOP"},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"úkol"},{"t":"Space"},{"t":"Str","c":"1"}]}},"blocks":[{"t":"Header","c":[1,["kombinatorická-optimalizace-problém-batohu",[],[]],[{"t":"Str","c":"Kombinatorická"},{"t":"Space"},{"t":"Str","c":"optimalizace:"},{"t":"Space"},{"t":"Str","c":"problém"},{"t":"Space"},{"t":"Str","c":"batohu"}]]},{"t":"Para","c":[{"t":"Str","c":"První"},{"t":"Space"},{"t":"Str","c":"úkol"},{"t":"Space"},{"t":"Str","c":"předmětu"},{"t":"Space"},{"t":"Str","c":"NI-KOP"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"se"},{"t":"Space"},{"t":"Str","c":"rozhodl"},{"t":"Space"},{"t":"Str","c":"implementovat"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"jazyce"},{"t":"Space"},{"t":"Str","c":"Rust"},{"t":"Space"},{"t":"Str","c":"za"},{"t":"Space"},{"t":"Str","c":"pomoci"},{"t":"SoftBreak"},{"t":"Str","c":"nástrojů"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Emph","c":[{"t":"Str","c":"literate"},{"t":"Space"},{"t":"Str","c":"programming"}]},{"t":"Space"},{"t":"Str","c":"–"},{"t":"Space"},{"t":"Str","c":"přístup"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"psaní"},{"t":"Space"},{"t":"Str","c":"zdrojového"},{"t":"Space"},{"t":"Str","c":"kódu,"},{"t":"Space"},{"t":"Str","c":"který"},{"t":"SoftBreak"},{"t":"Str","c":"upřednostňuje"},{"t":"Space"},{"t":"Str","c":"lidsky"},{"t":"Space"},{"t":"Str","c":"čitelný"},{"t":"Space"},{"t":"Str","c":"popis"},{"t":"Space"},{"t":"Str","c":"před"},{"t":"Space"},{"t":"Str","c":"seznamem"},{"t":"Space"},{"t":"Str","c":"příkazů"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"počítač."},{"t":"Space"},{"t":"Str","c":"Tento"},{"t":"SoftBreak"},{"t":"Str","c":"soubor"},{"t":"Space"},{"t":"Str","c":"obsahuje"},{"t":"Space"},{"t":"Str","c":"veškerý"},{"t":"Space"},{"t":"Str","c":"zdrojový"},{"t":"Space"},{"t":"Str","c":"kód"},{"t":"Space"},{"t":"Str","c":"nutný"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"reprodukci"},{"t":"Space"},{"t":"Str","c":"mojí"},{"t":"Space"},{"t":"Str","c":"práce."}]},{"t":"Header","c":[2,["instrukce-k-sestavení-programu",[],[]],[{"t":"Str","c":"Instrukce"},{"t":"Space"},{"t":"Str","c":"k"},{"t":"Space"},{"t":"Str","c":"sestavení"},{"t":"Space"},{"t":"Str","c":"programu"}]]},{"t":"Para","c":[{"t":"Str","c":"Program"},{"t":"Space"},{"t":"Str","c":"využívá"},{"t":"Space"},{"t":"Str","c":"standardních"},{"t":"Space"},{"t":"Str","c":"nástrojů"},{"t":"Space"},{"t":"Str","c":"jazyka"},{"t":"Space"},{"t":"Str","c":"Rust."},{"t":"Space"},{"t":"Str","c":"O"},{"t":"Space"},{"t":"Str","c":"sestavení"},{"t":"Space"},{"t":"Str","c":"stačí"},{"t":"Space"},{"t":"Str","c":"požádat"},{"t":"SoftBreak"},{"t":"Code","c":[["",[],[]],"cargo"]},{"t":"Str","c":"."}]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["build-instructions",["zsh","eval","bootstrap-fold"],[]],"cd solver\ncargo build --release --color always"]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\"><span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\"> Downloading</span> crates ...\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">  Downloaded</span> anyhow v1.0.44\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> anyhow v1.0.44\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">   Compiling</span> solver v0.1.0 (/__w/ni-kop/ni-kop/1-exact-knapsack/solver)\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused variable: `b`</span>\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/main.rs:85:17\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">85</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>        let (m, b, items) = (self.m, self.b, &amp;self.items);\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">help: if this is intentional, prefix it with an underscore: `_b`</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">= </span><span style=\"font-weight: bold\">note</span>: `#[warn(unused_variables)]` on by default\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused variable: `b`</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/main.rs:112:17\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">112</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>        let (m, b, items) = (self.m, self.b, &amp;self.items);\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">help: if this is intentional, prefix it with an underscore: `_b`</span>\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused variable: `prices`</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/main.rs:113:13\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">113</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>        let prices: Vec&lt;u32&gt; = items.iter().rev()\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>            <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^^^^^^</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">help: if this is intentional, prefix it with an underscore: `_prices`</span>\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: unused variable: `b`</span>\r\n   <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/main.rs:141:17\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">141</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>        let (m, b, items) = (self.m, self.b, &amp;self.items);\r\n    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>                <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">help: if this is intentional, prefix it with an underscore: `_b`</span>\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">: field is never read: `id`</span>\r\n <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">--&gt; </span>src/main.rs:8:5\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">8</span> <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>    id: i32, m: u32, b: u32, items: Vec&lt;(u32, u32)&gt;\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">| </span>    <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">^^^^^^^</span>\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">|</span>\r\n  <span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #5c5cff\">= </span><span style=\"font-weight: bold\">note</span>: `#[warn(dead_code)]` on by default\r\n\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #aa5500\">warning</span><span style=\"font-weight: bold\">:</span> `solver` (bin \"solver\") generated 5 warnings\r\n<span style=\"font-weight: bold\"></span><span style=\"font-weight: bold; color: #00aa00\">    Finished</span> release [optimized] target(s) in 3.91s\r\n</pre>"]}]]}]]}]]},{"t":"Header","c":[2,["benchmarking",[],[]],[{"t":"Str","c":"Benchmarking"}]]},{"t":"Para","c":[{"t":"Str","c":"Pro"},{"t":"Space"},{"t":"Str","c":"provedení"},{"t":"Space"},{"t":"Str","c":"měření"},{"t":"Space"},{"t":"Str","c":"výkonu"},{"t":"Space"},{"t":"Str","c":"programu"},{"t":"Space"},{"t":"Str","c":"jsem"},{"t":"Space"},{"t":"Str","c":"využil"},{"t":"Space"},{"t":"Str","c":"nástroje"},{"t":"Space"},{"t":"Str","c":"Hyperfine."}]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["benchmark",["zsh","eval","bootstrap-fold"],[]],"uname -a\ncd solver\nhyperfine --export-json ../docs/bench.json \\\n          --parameter-list n 4,10,15,20 \\\n          --parameter-list alg bf,bb,dp \\\n          --runs 2 \\\n          --style color \\\n          'cargo run --release -- {alg} < ds/NR{n}_inst.dat' 2>&1 \\\n    | fold -w 120 -s"]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\">Linux d5fa4863618d 5.8.0-1042-azure #45~20.04.1-Ubuntu SMP Wed Sep 15 14:24:15 UTC 2021 x86_64 GNU/Linux\r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">1</span>: cargo run --release -- bf &lt; ds/NR4_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\"> 99.8 ms</span> ± <span style=\"color: #00aa00\">  1.3 ms</span>    [User: <span style=\"color: #0000aa\">89.4 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">10.6 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\"> 98.9 ms</span> … <span style=\"color: #E850A8\">100.8 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">2</span>: cargo run --release -- bf &lt; ds/NR10_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">103.4 ms</span> ± <span style=\"color: #00aa00\">  3.1 ms</span>    [User: <span style=\"color: #0000aa\">93.5 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">10.1 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\">101.2 ms</span> … <span style=\"color: #E850A8\">105.6 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">3</span>: cargo run --release -- bf &lt; ds/NR15_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">166.6 ms</span> ± <span style=\"color: #00aa00\"> 10.3 ms</span>    [User: <span style=\"color: #0000aa\">141.1 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">23.7 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\">159.4 ms</span> … <span style=\"color: #E850A8\">173.9 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">4</span>: cargo run --release -- bf &lt; ds/NR20_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\"> 1.889 s</span> ± <span style=\"color: #00aa00\"> 0.073 s</span>    [User: <span style=\"color: #0000aa\">1.872 s</span>, \r\nSystem: <span style=\"color: #0000aa\">0.016 s</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\"> 1.837 s</span> … <span style=\"color: #E850A8\"> 1.940 s</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">5</span>: cargo run --release -- bb &lt; ds/NR4_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">109.4 ms</span> ± <span style=\"color: #00aa00\"> 10.0 ms</span>    [User: <span style=\"color: #0000aa\">98.8 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">10.7 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\">102.4 ms</span> … <span style=\"color: #E850A8\">116.5 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">6</span>: cargo run --release -- bb &lt; ds/NR10_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">105.9 ms</span> ± <span style=\"color: #00aa00\">  3.3 ms</span>    [User: <span style=\"color: #0000aa\">88.1 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">17.9 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\">103.6 ms</span> … <span style=\"color: #E850A8\">108.2 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">7</span>: cargo run --release -- bb &lt; ds/NR15_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">164.7 ms</span> ± <span style=\"color: #00aa00\">  0.5 ms</span>    [User: <span style=\"color: #0000aa\">150.8 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">14.0 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\">164.4 ms</span> … <span style=\"color: #E850A8\">165.0 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">8</span>: cargo run --release -- bb &lt; ds/NR20_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\"> 2.199 s</span> ± <span style=\"color: #00aa00\"> 0.008 s</span>    [User: <span style=\"color: #0000aa\">2.177 s</span>, \r\nSystem: <span style=\"color: #0000aa\">0.018 s</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\"> 2.193 s</span> … <span style=\"color: #E850A8\"> 2.205 s</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">9</span>: cargo run --release -- dp &lt; ds/NR4_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">102.5 ms</span> ± <span style=\"color: #00aa00\">  3.6 ms</span>    [User: <span style=\"color: #0000aa\">94.7 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">7.9 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\"> 99.9 ms</span> … <span style=\"color: #E850A8\">105.0 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">10</span>: cargo run --release -- dp &lt; ds/NR10_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">104.9 ms</span> ± <span style=\"color: #00aa00\">  0.2 ms</span>    [User: <span style=\"color: #0000aa\">99.2 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">5.8 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\">104.7 ms</span> … <span style=\"color: #E850A8\">105.0 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">11</span>: cargo run --release -- dp &lt; ds/NR15_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">117.5 ms</span> ± <span style=\"color: #00aa00\">  2.8 ms</span>    [User: <span style=\"color: #0000aa\">107.7 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">9.9 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\">115.5 ms</span> … <span style=\"color: #E850A8\">119.5 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Benchmark #</span><span style=\"font-weight: bold\">12</span>: cargo run --release -- dp &lt; ds/NR20_inst.dat\r\n  Time (<span style=\"font-weight: bold; color: #00aa00\">mean</span> ± <span style=\"color: #00aa00\">σ</span>):     <span style=\"font-weight: bold; color: #00aa00\">130.3 ms</span> ± <span style=\"color: #00aa00\">  1.6 ms</span>    [User: <span style=\"color: #0000aa\">112.0 ms</span>, \r\nSystem: <span style=\"color: #0000aa\">18.4 ms</span>]\r\n  Range (<span style=\"color: #00aaaa\">min</span> … <span style=\"color: #E850A8\">max</span>):   <span style=\"color: #00aaaa\">129.2 ms</span> … <span style=\"color: #E850A8\">131.5 ms</span>    <span style=\"font-weight: lighter\">2 runs</span>\r\n \r\n<span style=\"font-weight: bold\">Summary</span>\r\n  '<span style=\"color: #00aaaa\">cargo run --release -- bf &lt; ds/NR4_inst.dat</span>' ran\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.03</span> ± <span style=\"color: #00aa00\">0.04</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- dp &lt; ds/NR4_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.04</span> ± <span style=\"color: #00aa00\">0.03</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- bf &lt; ds/NR10_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.05</span> ± <span style=\"color: #00aa00\">0.01</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- dp &lt; ds/NR10_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.06</span> ± <span style=\"color: #00aa00\">0.04</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- bb &lt; ds/NR10_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.10</span> ± <span style=\"color: #00aa00\">0.10</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- bb &lt; ds/NR4_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.18</span> ± <span style=\"color: #00aa00\">0.03</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- dp &lt; ds/NR15_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.31</span> ± <span style=\"color: #00aa00\">0.02</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- dp &lt; ds/NR20_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.65</span> ± <span style=\"color: #00aa00\">0.02</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- bb &lt; ds/NR15_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">    1.67</span> ± <span style=\"color: #00aa00\">0.11</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- bf &lt; ds/NR15_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">   18.92</span> ± <span style=\"color: #00aa00\">0.77</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- bf &lt; ds/NR20_inst.dat</span>'\r\n<span style=\"font-weight: bold; color: #00aa00\">   22.03</span> ± <span style=\"color: #00aa00\">0.30</span> times faster than '<span style=\"color: #E850A8\">cargo run --release -- bb &lt; ds/NR20_inst.dat</span>'\r\n</pre>"]}]]}]]}]]},{"t":"Para","c":[{"t":"Str","c":"Měření"},{"t":"Space"},{"t":"Str","c":"ze"},{"t":"Space"},{"t":"Str","c":"spuštění"},{"t":"Space"},{"t":"Str","c":"Hyperfine"},{"t":"Space"},{"t":"Str","c":"jsou"},{"t":"Space"},{"t":"Str","c":"uložena"},{"t":"Space"},{"t":"Str","c":"v"},{"t":"Space"},{"t":"Str","c":"souboru"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"docs/bench.json"]},{"t":"Str","c":","},{"t":"Space"},{"t":"Str","c":"který"},{"t":"SoftBreak"},{"t":"Str","c":"následně"},{"t":"Space"},{"t":"Str","c":"zpracujeme"},{"t":"Space"},{"t":"Str","c":"do"},{"t":"Space"},{"t":"Str","c":"tabulky"},{"t":"Space"},{"t":"Str","c":"níže."}]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["json-to-csv",["zsh","eval","bootstrap-fold"],[]],"echo \"algoritmus,\\$n\\$,průměr,\\$\\pm \\sigma\\$,minimum,medián,maximum\" > docs/bench.csv\njq -r \\\n   '.[] | .[] | [.parameters.alg, .parameters.n\n                , ([.mean, .stddev, .min, .median, .max]\n                   | map(\"**\" + (100000 * . + 0.5\n                         | floor\n                         | . / 100\n                         | tostring\n                         | if test(\"\\\\.\") then sub(\"\\\\.\"; \"**.\") else . + \"**\" end\n                         ) + \" ms\"\n                        )\n                  )\n                ] | flatten | @csv' \\\n   docs/bench.json \\\n>> docs/bench.csv\necho \"\""]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\">\r\n</pre>"]}]]}]]}]]},{"t":"Table","c":[["",[],[]],[null,[{"t":"Plain","c":[{"t":"Str","c":"Měření"},{"t":"Space"},{"t":"Str","c":"výkonu"},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"různé"},{"t":"Space"},{"t":"Str","c":"kombinace"},{"t":"Space"},{"t":"Str","c":"velikosti"},{"t":"Space"},{"t":"Str","c":"instancí"},{"t":"Space"},{"t":"Str","c":"problému"},{"t":"Space"},{"t":"Str","c":"("},{"t":"Math","c":[{"t":"InlineMath"},"n"]},{"t":"Str","c":")"},{"t":"Space"},{"t":"Str","c":"a"},{"t":"SoftBreak"},{"t":"Str","c":"zvoleného"},{"t":"Space"},{"t":"Str","c":"algoritmu."},{"t":"Space"}]}]],[[{"t":"AlignDefault"},{"t":"ColWidth","c":0.12931034482758622}],[{"t":"AlignDefault"},{"t":"ColWidth","c":6.896551724137931e-2}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.16379310344827586}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.14655172413793102}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.16379310344827586}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.16379310344827586}],[{"t":"AlignDefault"},{"t":"ColWidth","c":0.16379310344827586}]],[["",[],[]],[[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"algoritmus"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Math","c":[{"t":"InlineMath"},"n"]}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"průměr"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Math","c":[{"t":"InlineMath"},"\\pm \\sigma"]}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"minimum"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"medián"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"maximum"}]}]]]]]],[[["",[],[]],0,[],[[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"bf"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"4"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"99"}]},{"t":"Str","c":".84"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"1"}]},{"t":"Str","c":".29"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"98"}]},{"t":"Str","c":".93"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"99"}]},{"t":"Str","c":".84"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"100"}]},{"t":"Str","c":".75"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"bf"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"10"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"103"}]},{"t":"Str","c":".4"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"3"}]},{"t":"Str","c":".09"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"101"}]},{"t":"Str","c":".22"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"103"}]},{"t":"Str","c":".4"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"105"}]},{"t":"Str","c":".59"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"bf"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"15"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"166"}]},{"t":"Str","c":".62"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"10"}]},{"t":"Str","c":".27"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"159"}]},{"t":"Str","c":".36"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"166"}]},{"t":"Str","c":".62"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"173"}]},{"t":"Str","c":".88"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"bf"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"20"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"1888"}]},{"t":"Str","c":".59"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"72"}]},{"t":"Str","c":".97"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"1837"}]},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"1888"}]},{"t":"Str","c":".59"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"1940"}]},{"t":"Str","c":".19"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"bb"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"4"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"109"}]},{"t":"Str","c":".44"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"9"}]},{"t":"Str","c":".98"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"102"}]},{"t":"Str","c":".38"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"109"}]},{"t":"Str","c":".44"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"116"}]},{"t":"Str","c":".49"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"bb"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"10"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"105"}]},{"t":"Str","c":".91"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"3"}]},{"t":"Str","c":".27"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"103"}]},{"t":"Str","c":".59"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"105"}]},{"t":"Str","c":".91"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"108"}]},{"t":"Str","c":".22"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"bb"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"15"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"164"}]},{"t":"Str","c":".7"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"0"}]},{"t":"Str","c":".45"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"164"}]},{"t":"Str","c":".38"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"164"}]},{"t":"Str","c":".7"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"165"}]},{"t":"Str","c":".02"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"bb"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"20"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"2199"}]},{"t":"Str","c":".06"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"8"}]},{"t":"Str","c":".21"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"2193"}]},{"t":"Str","c":".26"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"2199"}]},{"t":"Str","c":".06"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"2204"}]},{"t":"Str","c":".86"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"dp"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"4"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"102"}]},{"t":"Str","c":".47"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"3"}]},{"t":"Str","c":".61"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"99"}]},{"t":"Str","c":".92"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"102"}]},{"t":"Str","c":".47"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"105"}]},{"t":"Str","c":".02"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"dp"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"10"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"104"}]},{"t":"Str","c":".86"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"0"}]},{"t":"Str","c":".19"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"104"}]},{"t":"Str","c":".73"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"104"}]},{"t":"Str","c":".86"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"105"}]},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"dp"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"15"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"117"}]},{"t":"Str","c":".45"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"2"}]},{"t":"Str","c":".83"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"115"}]},{"t":"Str","c":".45"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"117"}]},{"t":"Str","c":".45"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"119"}]},{"t":"Str","c":".45"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]],[["",[],[]],[[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"dp"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Str","c":"20"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"130"}]},{"t":"Str","c":".34"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"1"}]},{"t":"Str","c":".62"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"129"}]},{"t":"Str","c":".2"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"130"}]},{"t":"Str","c":".34"},{"t":"Space"},{"t":"Str","c":"ms"}]}]],[["",[],[]],{"t":"AlignDefault"},1,1,[{"t":"Plain","c":[{"t":"Strong","c":[{"t":"Str","c":"131"}]},{"t":"Str","c":".48"},{"t":"Space"},{"t":"Str","c":"ms"}]}]]]]]]],[["",[],[]],[]]]},{"t":"Header","c":[3,["srovnání-algoritmů",[],[]],[{"t":"Str","c":"Srovnání"},{"t":"Space"},{"t":"Str","c":"algoritmů"}]]},{"t":"Div","c":[["",["doctest"],[["status","SUCCESS"]]],[{"t":"Div","c":[["",["doctestInput"],[]],[{"t":"CodeBlock","c":[["",["python","eval"],[]],"import matplotlib.pyplot as plt\nimport pandas as pd\nfrom pandas.core.tools.numeric import to_numeric\n\ndf = pd.read_csv(\"docs/bench.csv\", dtype = \"string\")\ndf.rename({\n        \"algoritmus\": \"alg\",\n        \"$n$\": \"n\",\n        \"průměr\": \"avg\",\n        \"$\\pm \\sigma$\": \"sigma\",\n        \"medián\": \"median\",\n        \"minimum\": \"min\",\n        \"maximum\": \"max\",\n    },\n    inplace = True,\n    errors  = \"raise\",\n    axis    = 1,\n)\n\nnumeric_columns = [\"n\", \"avg\", \"sigma\", \"min\", \"median\", \"max\"]\ndf[numeric_columns] = df[numeric_columns].apply(lambda c:\n    c.apply(lambda x:\n        to_numeric(x.replace(\"**\", \"\").replace(\" ms\", \"\"))\n    )\n)\n\n# Create a figure and a set of subplots.\nfig, ax = plt.subplots(figsize = (11, 6))\nlabels = { \"bf\": \"Hrubá síla\"\n         , \"bb\": \"Branch & bound\"\n         , \"dp\": \"Dynamické programování\"\n         }\n\n# Group the dataframe by alg and create a line for each group.\nfor name, group in df.groupby(\"alg\"):\n    (x, y, sigma) = (group[\"n\"], group[\"avg\"], group[\"sigma\"])\n    ax.plot(x, y, label = labels[name])\n    ax.fill_between(x, y + sigma, y - sigma, alpha = 0.3)\n\n# Axis metadata: ticks, scaling, margins, and the legend\nplt.xticks(df[\"n\"])\nax.set_yscale(\"log\", base = 10)\nax.set_yticks(list(plt.yticks()[0]) + list(df[\"avg\"]), minor = True)\nax.margins(0.05, 0.1)\nax.legend(loc=\"upper left\")\n\nplt.savefig(\"docs/graph.svg\")"]}]]},{"t":"Div","c":[["",["doctestResult"],[]],[{"t":"Div","c":[["",["programOutput"],[]],[{"t":"RawBlock","c":["html","<pre class=\"ansi2html-content\">&lt;Figure size 792x432 with 1 Axes&gt;</pre>"]}]]}]]}]]},{"t":"Para","c":[{"t":"Image","c":[["",[],[]],[{"t":"Str","c":"Závislost"},{"t":"Space"},{"t":"Str","c":"doby"},{"t":"Space"},{"t":"Str","c":"běhu"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"počtu"},{"t":"Space"},{"t":"Str","c":"předmětů."},{"t":"Space"},{"t":"Str","c":"Částečně"},{"t":"Space"},{"t":"Str","c":"průhledná"},{"t":"Space"},{"t":"Str","c":"oblast"},{"t":"Space"},{"t":"Str","c":"značí"},{"t":"SoftBreak"},{"t":"Str","c":"směrodatnou"},{"t":"Space"},{"t":"Str","c":"odchylku"},{"t":"Space"},{"t":"Str","c":"("},{"t":"Math","c":[{"t":"InlineMath"},"\\sigma"]},{"t":"Str","c":")."}],["graph.svg","fig:"]]}]},{"t":"Header","c":[2,["implementace",[],[]],[{"t":"Str","c":"Implementace"}]]},{"t":"Para","c":[{"t":"Str","c":"Program"},{"t":"Space"},{"t":"Str","c":"začíná"},{"t":"Space"},{"t":"Str","c":"definicí"},{"t":"Space"},{"t":"Str","c":"datové"},{"t":"Space"},{"t":"Str","c":"struktury"},{"t":"Space"},{"t":"Str","c":"reprezentující"},{"t":"Space"},{"t":"Str","c":"instanci"},{"t":"Space"},{"t":"Str","c":"problému"},{"t":"SoftBreak"},{"t":"Str","c":"batohu."}]},{"t":"CodeBlock","c":[["problem-instance-definition",["rust"],[]],"struct Instance {\n    id: i32, m: u32, b: u32, items: Vec<(u32, u32)>\n}"]},{"t":"CodeBlock","c":[["",["rust"],[["file","solver/src/main.rs"]]],"use std::{io::stdin, str::FromStr};\nuse anyhow::{Context, Result, anyhow};\n\n<<problem-instance-definition>>\n\nfn main() -> Result<()> {\n    let alg = {\n        <<select-algorithm>>\n    };\n\n    loop {\n        match parse_line()? {\n            Some(inst) => println!(\"{}\", alg(&inst)),\n            None => return Ok(())\n        }\n    }\n}\n\n<<parser>>\n\nimpl Instance {\n    <<solver-dp>>\n\n    <<solver-bb>>\n\n    <<solver-bf>>\n}"]},{"t":"Header","c":[2,["solvers",[],[]],[{"t":"Str","c":"Solvers"}]]},{"t":"Header","c":[3,["brute-force",[],[]],[{"t":"Str","c":"Brute"},{"t":"Space"},{"t":"Str","c":"force"}]]},{"t":"CodeBlock","c":[["solver-bf",["rust"],[]],"fn solve_stupider(&self) -> u32 {\n    let (m, b, items) = (self.m, self.b, &self.items);\n    fn go(items: &Vec<(u32, u32)>, cap: u32, i: usize) -> u32 {\n        use std::cmp::max;\n        if i >= items.len() { return 0; }\n\n        let (w, c) = items[i];\n        let next = |cap| go(items, cap, i + 1);\n        let include = || next(cap - w);\n        let exclude = || next(cap);\n        let current = if w <= cap {\n            max(c + include(), exclude())\n        } else {\n            exclude()\n        };\n        current\n    }\n\n    go(items, m, 0)\n}"]},{"t":"Header","c":[3,["branch-bound",[],[]],[{"t":"Str","c":"Branch"},{"t":"Space"},{"t":"Str","c":"&"},{"t":"Space"},{"t":"Str","c":"bound"}]]},{"t":"CodeBlock","c":[["solver-bb",["rust"],[]],"// branch & bound\nfn solve_stupid(&self) -> u32 {\n    let (m, b, items) = (self.m, self.b, &self.items);\n    let prices: Vec<u32> = items.iter().rev()\n        .scan(0, |sum, (_w, c)| {\n            *sum = *sum + c;\n            Some(*sum)\n        })\n        .collect();\n    fn go(items: &Vec<(u32, u32)>, best: u32, cap: u32, i: usize) -> u32 {\n        use std::cmp::max;\n        if i >= items.len() { return 0; }\n\n        let (w, c) = items[i];\n        let next = |best, cap| go(items, best, cap, i + 1);\n        let include = || next(best, cap - w);\n        let exclude = || next(best, cap);\n        let current = if w <= cap {\n            max(c + include(), exclude())\n        } else {\n            exclude()\n        };\n        max(current, best)\n    }\n\n    go(items, 0, m, 0)\n}"]},{"t":"Header","c":[3,["dynamic-programming",[],[]],[{"t":"Str","c":"Dynamic"},{"t":"Space"},{"t":"Str","c":"programming"}]]},{"t":"CodeBlock","c":[["solver-dp",["rust"],[]],"fn solve(&self) -> u32 {\n    let (m, b, items) = (self.m, self.b, &self.items);\n    let mut next = Vec::with_capacity(m as usize + 1);\n    next.resize(m as usize + 1, 0);\n    let mut last = Vec::new();\n\n    for i in 1..=items.len() {\n        let (weight, cost) = items[i - 1];\n        last.clone_from(&next);\n\n        for cap in 0..=m as usize {\n            next[cap] = if (cap as u32) < weight {\n                last[cap]\n            } else {\n                use std::cmp::max;\n                let rem_weight = max(0, cap as isize - weight as isize) as usize;\n                max(last[cap], last[rem_weight] + cost)\n            };\n        }\n    }\n\n    *next.last().unwrap() //>= b\n}"]},{"t":"Header","c":[2,["appendix",[],[]],[{"t":"Str","c":"Appendix"}]]},{"t":"Para","c":[{"t":"Str","c":"Zpracování"},{"t":"Space"},{"t":"Str","c":"vstupu"},{"t":"Space"},{"t":"Str","c":"neošetřuje"},{"t":"Space"},{"t":"Str","c":"chyby"},{"t":"Space"},{"t":"Str","c":"ve"},{"t":"Space"},{"t":"Str","c":"vstupním"},{"t":"Space"},{"t":"Str","c":"formátu,"}]},{"t":"CodeBlock","c":[["parser",["rust","bootstrap-fold"],[]],"<<boilerplate>>\n\nfn parse_line() -> Result<Option<Instance>> {\n    let mut input = String::new();\n    match stdin().read_line(&mut input)? {\n        0 => return Ok(None),\n        _ => ()\n    };\n\n    let mut numbers = input.split_whitespace();\n    let id: i32   = numbers.parse_next()?;\n    let  n: usize = numbers.parse_next()?;\n    let  m: u32   = numbers.parse_next()?;\n    let  b: u32   = numbers.parse_next()?;\n\n    let mut items: Vec<(u32, u32)> = Vec::with_capacity(n);\n    for _ in 0..n {\n        let w = numbers.parse_next()?;\n        let c = numbers.parse_next()?;\n        items.push((w, c));\n    }\n\n    Ok(Some(Instance {id, m, b, items}))\n}"]},{"t":"Para","c":[{"t":"Str","c":"Výběr"},{"t":"Space"},{"t":"Str","c":"algoritmu"},{"t":"Space"},{"t":"Str","c":"je"},{"t":"Space"},{"t":"Str","c":"řízen"},{"t":"Space"},{"t":"Str","c":"argumentem"},{"t":"Space"},{"t":"Str","c":"předaným"},{"t":"Space"},{"t":"Str","c":"na"},{"t":"Space"},{"t":"Str","c":"příkazové"},{"t":"Space"},{"t":"Str","c":"řádce."},{"t":"Space"},{"t":"Str","c":"Příslušnou"},{"t":"SoftBreak"},{"t":"Str","c":"funkci"},{"t":"Space"},{"t":"Str","c":"vrátíme"},{"t":"Space"},{"t":"Str","c":"jako"},{"t":"Space"},{"t":"Str","c":"hodnotu"},{"t":"Space"},{"t":"Str","c":"tohoto"},{"t":"Space"},{"t":"Str","c":"bloku:"}]},{"t":"CodeBlock","c":[["select-algorithm",["rust","bootstrap-fold"],[]],"use std::env;\nlet args: Vec<String> = env::args().collect();\nif args.len() != 2 {\n    println!(\n        \"Usage: {} <algorithm>, where <algorithm> is one of bf, bb, dp\",\n        args[0]\n    );\n    return Err(anyhow!(\"Expected 1 argument, got {}\", args.len() - 1));\n}\nmatch &args[1][..] {\n    \"bf\"    => Instance::solve_stupider,\n    \"bb\"    => Instance::solve_stupid,\n    \"dp\"    => Instance::solve,\n    invalid => panic!(\"\\\"{}\\\" is not a known algorithm\", invalid),\n}"]},{"t":"Para","c":[{"t":"Str","c":"Trait"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"Boilerplate"]},{"t":"Space"},{"t":"Str","c":"definuje"},{"t":"Space"},{"t":"Str","c":"funkci"},{"t":"Space"},{"t":"Code","c":[["",[],[]],"parse_next"]},{"t":"Space"},{"t":"Str","c":"pro"},{"t":"Space"},{"t":"Str","c":"zkrácení"},{"t":"Space"},{"t":"Str","c":"zápisu"},{"t":"Space"},{"t":"Str","c":"zpracování"},{"t":"SoftBreak"},{"t":"Str","c":"vstupu."}]},{"t":"CodeBlock","c":[["boilerplate",["rust","bootstrap-fold"],[]],"trait Boilerplate {\n    fn parse_next<T: FromStr>(&mut self) -> Result<T>\n      where <T as FromStr>::Err: std::error::Error + Send + Sync + 'static;\n}\n\nimpl Boilerplate for std::str::SplitWhitespace<'_> {\n    fn parse_next<T: FromStr>(&mut self) -> Result<T>\n      where <T as FromStr>::Err: std::error::Error + Send + Sync + 'static {\n        let str = self.next().ok_or(anyhow!(\"unexpected end of input\"))?;\n        str.parse::<T>()\n           .with_context(|| format!(\"cannot parse {}\", str))\n    }\n}"]}]}